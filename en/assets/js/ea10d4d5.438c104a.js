"use strict";(self.webpackChunkathenaserving=self.webpackChunkathenaserving||[]).push([[1706],{3905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>m});var n=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(o),m=a,b=u["".concat(l,".").concat(m)]||u[m]||p[m]||r;return o?n.createElement(b,s(s({ref:t},d),{},{components:o})):n.createElement(b,s({ref:t},d))}));function m(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,s=new Array(r);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<r;c++)s[c]=o[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},9319:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var n=o(7462),a=(o(7294),o(3905));const r={sidebar_position:2,sidebar_label:"Install Service With Sealos"},s="AthenaServing Framework (ASF)",i={unversionedId:"\u5feb\u901f\u5f00\u59cb/\u4ecesealos\u5b89\u88c5",id:"\u5feb\u901f\u5f00\u59cb/\u4ecesealos\u5b89\u88c5",title:"AthenaServing Framework (ASF)",description:"Vision",source:"@site/docs/\u5feb\u901f\u5f00\u59cb/\u4ecesealos\u5b89\u88c5.md",sourceDirName:"\u5feb\u901f\u5f00\u59cb",slug:"/\u5feb\u901f\u5f00\u59cb/\u4ecesealos\u5b89\u88c5",permalink:"/athena_website/en/docs/\u5feb\u901f\u5f00\u59cb/\u4ecesealos\u5b89\u88c5",draft:!1,editUrl:"https://github.com/iflytek/athena_website/tree/master/docs/\u5feb\u901f\u5f00\u59cb/\u4ecesealos\u5b89\u88c5.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Install Service With Sealos"},sidebar:"docSidebar",previous:{title:"Install Service With Helm Chart",permalink:"/athena_website/en/docs/\u5feb\u901f\u5f00\u59cb/\u4ecehelm\u5b89\u88c5"},next:{title:"Loader",permalink:"/athena_website/en/docs/category/loader"}},l={},c=[{value:"Vision",id:"vision",level:2},{value:"Framework Introduction",id:"framework-introduction",level:2},{value:"What is AIGES",id:"what-is-aiges",level:2},{value:"Scenario-oriented",id:"scenario-oriented",level:2},{value:"Solve the problem",id:"solve-the-problem",level:2},{value:"Features",id:"features",level:2},{value:"Framework Architecture",id:"framework-architecture",level:2},{value:"Framework installation",id:"framework-installation",level:2},{value:"Precondition",id:"precondition",level:3},{value:"Install",id:"install",level:3},{value:"Integrate access to your custom AI capabilities",id:"integrate-access-to-your-custom-ai-capabilities",level:2},{value:"more details",id:"more-details",level:2}],d={toc:c};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"athenaserving-framework-asf"},"AthenaServing Framework (ASF)"),(0,a.kt)("h2",{id:"vision"},"Vision"),(0,a.kt)("p",null,"Provide a consistent solution for engineering management of AI capabilities for any scenario that requires the use of AI capabilities. Users of AI scenarios in any field can quickly implement their algorithm models into a unified standard HTTP API service."),(0,a.kt)("h2",{id:"framework-introduction"},"Framework Introduction"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"AthenaServing Framework (ASF)")," AI inference service framework relies on iFLYTEK's years of experience in cloud service of AI algorithm engine and continuous exploration and practice of cloud native. ",(0,a.kt)("inlineCode",{parentName:"p"},"ASF")," enjoys the convenience and speed of related cloud-native components. AI algorithm engine developers can focus on the evolution and research of the algorithm, and do not need to be distracted in the management of hardware resources and the development and operation of cloud services."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ASF")," is a serverless and fully managed platform framework for AI algorithm engine specially designed for AI capability developers. You can quickly deploy the AI algorithm engine by integrating the plug-ins provided in ",(0,a.kt)("inlineCode",{parentName:"p"},"ASF"),", and use network and distribution strategies , data processing and other supporting auxiliary systems. The engine hosting platform is committed to accelerating the cloud service of AI algorithm engines, and provides multiple guarantees for the stability of cloud services with the help of cloud native architecture. Deploy, upgrade, scale, operate, and monitor engines securely."),(0,a.kt)("p",null,"At present, the deployment of ",(0,a.kt)("inlineCode",{parentName:"p"},"ASF")," requires developers to master a certain knowledge of K8s, helm, etc., and the installation and deployment depends on the online mirror warehouse and helm repo, which is somewhat weak in the face of offline environment and various operating system deployment requirements. ",(0,a.kt)("inlineCode",{parentName:"p"},"Cluster mirror"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"images-shim")," and other solutions allow applications to make offline deployment very smooth without any additional operations. After sealos supports ",(0,a.kt)("inlineCode",{parentName:"p"},"ASF")," cluster mirroring, anyone can work in any scene and in any environment. Delivers ",(0,a.kt)("inlineCode",{parentName:"p"},"ASF")," that pulls up an ",(0,a.kt)("inlineCode",{parentName:"p"},"ASF")," environment with just one command. Users can centrally deploy their AI capabilities on the ",(0,a.kt)("inlineCode",{parentName:"p"},"ASF")," framework and provide HTTP APIs to the outside world."),(0,a.kt)("h2",{id:"what-is-aiges"},"What is AIGES"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"AIGES")," is the core component of ",(0,a.kt)("inlineCode",{parentName:"p"},"ASF"),", the Chinese name loader. Mainly responsible for converting the user's reasoning code (according to established standards) into grpc/http services."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"AIGES and Language Wrapper")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"C/C++ Wrapper\n",(0,a.kt)("img",{src:o(3696).Z,width:"776",height:"571"}))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Python Wrapper\n",(0,a.kt)("img",{src:o(2216).Z,width:"776",height:"571"})))),(0,a.kt)("h2",{id:"scenario-oriented"},"Scenario-oriented"),(0,a.kt)("p",null,"AI capabilities ultimately need to be implemented into engineering, and some companies lack a unified standard AI engineering solution."),(0,a.kt)("h2",{id:"solve-the-problem"},"Solve the problem"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"There are many AI capabilities, no standard"),(0,a.kt)("li",{parentName:"ul"},"The AI capability service is online, and there is a lot of redundant work in the service process"),(0,a.kt)("li",{parentName:"ul"},"No AI engineering team"),(0,a.kt)("li",{parentName:"ul"},"No final standard service agreement")),(0,a.kt)("h2",{id:"features"},"Features"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Optimized XRPC framework based on GRPC"),(0,a.kt)("li",{parentName:"ul"},"Definition of unified standard service agreement"),(0,a.kt)("li",{parentName:"ul"},"Hundred billions of PV traffic polishing"),(0,a.kt)("li",{parentName:"ul"},"Support multiple load balancing strategies"),(0,a.kt)("li",{parentName:"ul"},"Add support for Python code inference\n*...")),(0,a.kt)("h2",{id:"framework-architecture"},"Framework Architecture"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://github.com/iflytek/proposals/blob/main/athenaloader/athena.png?raw=true",alt:"img"})),(0,a.kt)("h2",{id:"framework-installation"},"Framework installation"),(0,a.kt)("h3",{id:"precondition"},"Precondition"),(0,a.kt)("p",null,"Prepare a test machine (4c8G), hard disk >=20G"),(0,a.kt)("h3",{id:"install"},"Install"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install sealos.4.0")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ wget -c https://sealyun-home.oss-cn-beijing.aliyuncs.com/sealos-4.0/latest/sealos-amd64 -O sealos &&  chmod +x sealos && mv sealos /usr/bin\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Create a cluster")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ sealos run labring/kubernetes:v1.19.16 labring/calico:v3.22.1   --masters 192.168.64.2 -p <password>\n")),(0,a.kt)("p",null,(0,a.kt)("img",{src:o(2514).Z,width:"1497",height:"271"}),"\n",(0,a.kt)("img",{src:o(6665).Z,width:"1542",height:"625"}),"\n",(0,a.kt)("img",{src:o(1783).Z,width:"1064",height:"469"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Install helm")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ sealos run labring/helm:v3.8.2 \n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Install openebs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ sealos run labring/openebs:v1.9.0 \n\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ sealos run registry.cn-qingdao.aliyuncs.com/labring/athenaserving:v2.0.0rc1\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"HTTP call AI demo capability MMOCR capability")),(0,a.kt)("p",null,"MMOCR is an open source toolbox based on PyTorch and mmdetection, focusing on text detection, text recognition and corresponding downstream tasks such as key information extraction. It is part of the OpenMMLab project. ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/open-mmlab/mmocr/blob/main/README_zh-CN.md"},"Project address")," in ","[wrapper.py]","(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/iflytek/aiges/blob/"},"https://github.com/iflytek/aiges/blob/")," master/demo/mmocr/wrapper/wrapper_v2.py), we use python to easily encapsulate ",(0,a.kt)("a",{parentName:"p",href:"https://mmocr.readthedocs.io/zh_CN/latest/demo.html#id4"},"text + detection and recognition ability")," into A capability that can be deployed into ",(0,a.kt)("inlineCode",{parentName:"p"},"ASF")," as an HTTP API. After deploying ",(0,a.kt)("inlineCode",{parentName:"p"},"ASF")," using Sealos, you can use the following script to modify the ",(0,a.kt)("inlineCode",{parentName:"p"},"url")," value to complete the call to the ",(0,a.kt)("inlineCode",{parentName:"p"},"MMOCR (text + detection)")," AI capability."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import requests\nimport json\nimport base64\n\nimage = open("demo_text_det.jpg","rb")\nimg = base64.b64encode(image.read())\n\n\nurl = "http://<your nodeIP>:30889/mmocr"\nurl = "http://<your nodeIP:30889/v1/private/mmocr"\nmethod = "POST"\nheaders = {"Content-Type":"application/json"}\ndata = {\n    "header": {\n        "app_id": "123456",\n        "uid": "39769795890",\n        "did": "SR082321940000200",\n        "imei": "8664020318693660",\n        "imsi": "4600264952729100",\n        "mac": "6c:92:bf:65:c6:14",\n        "net_type": "wifi",\n        "net_isp": "CMCC",\n        "status": 3,\n        "request_id": None\n    },\n    "parameter": {\n        "mmocr": {\n            "category": "ai_category",\n            "application_mode": "common_gpu",\n            "gpu_id": "first",\n            "gpu_type": "T4G16",\n            "boxes": {\n                "encoding": "utf8",\n                "compress": "raw",\n                "format": "json"\n            }\n        }\n    },\n    "payload": {\n        "data": {\n            "encoding": "jpg",\n            "image": img.decode("utf-8"),\n            "status": 3\n        }\n    }\n}\n\n# call the http api.\nresp = requests.post(url,headers=headers,data=json.dumps(data))\n\nprint(resp.status_code)\n\nif resp.status_code != 200:\n\n    print(resp.json())\n\nresult = resp.json()[\'payload\'][\'boxes\'][\'text\']\nprint("HTTP API response is : %s "% str(result))\n\nprint("########################################")\n\nfor box in result[0].get("result"):\n\n    msg = "MMocr Result: box located at {box}, box score is {box_score}.  Detected text is {text} , text  score is {text_score}..."\n    print(msg.format(**box))\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Call and return result"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd /var/lib/sealos/data/default/rootfs/athenaserving/charts/mmocr_ase\n# Modify the url part in demo.py to nodeIP\npython3 demo.py\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"200\nHTTP API response is : [{'filename': '0', 'result': [{'box': [190, 37, 253, 31, 254, 46, 191, 52], 'box_score': 0.9566415548324585, 'text': 'nboroughofs', 'text_score': 1.0}, {'box': [253, 47, 257, 36, 287, 47, 282, 58], 'box_score': 0.9649642705917358, 'text': 'fsouthw', 'text_score': 1.0}, {'box': [157, 59, 188, 41, 194, 52, 163, 70], 'box_score': 0.9521175622940063, 'text': 'londond', 'text_score': 0.9897959183673469}, {'box': [280, 58, 286, 50, 306, 67, 300, 74], 'box_score': 0.9397556781768799, 'text': 'thwark', 'text_score': 1.0}, {'box': [252, 78, 295, 78, 295, 98, 252, 98], 'box_score': 0.9694718718528748, 'text': 'hill', 'text_score': 1.0}, {'box': [165, 78, 247, 78, 247, 99, 165, 99], 'box_score': 0.9548642039299011, 'text': 'octavia', 'text_score': 1.0}, {'box': [164, 105, 215, 103, 216, 121, 165, 123], 'box_score': 0.9806956052780151, 'text': 'social', 'text_score': 1.0}, {'box': [219, 104, 294, 104, 294, 122, 219, 122], 'box_score': 0.9688025116920471, 'text': 'reformer', 'text_score': 1.0}, {'box': [150, 124, 226, 124, 226, 141, 150, 141], 'box_score': 0.9752051830291748, 'text': 'established', 'text_score': 1.0}, {'box': [229, 124, 255, 124, 255, 140, 229, 140], 'box_score': 0.94972825050354, 'text': 'this', 'text_score': 1.0}, {'box': [259, 125, 305, 123, 306, 139, 260, 142], 'box_score': 0.9752089977264404, 'text': 'garden', 'text_score': 1.1666666666666667}, {'box': [166, 142, 193, 141, 194, 156, 167, 157], 'box_score': 0.9731062650680542, 'text': 'hall', 'text_score': 1.0}, {'box': [198, 142, 223, 142, 223, 156, 198, 156], 'box_score': 0.9548938870429993, 'text': 'and', 'text_score': 1.0}, {'box': [228, 144, 286, 144, 286, 159, 228, 159], 'box_score': 0.977089524269104, 'text': 'cottages', 'text_score': 1.25}, {'box': [180, 158, 205, 158, 205, 172, 180, 172], 'box_score': 0.9400062561035156, 'text': 'and', 'text_score': 1.0}, {'box': [210, 160, 279, 158, 279, 172, 210, 174], 'box_score': 0.9543584585189819, 'text': 'pioneered', 'text_score': 1.0}, {'box': [226, 176, 277, 176, 277, 188, 226, 188], 'box_score': 0.9748533964157104, 'text': 'cadets', 'text_score': 1.0}, {'box': [183, 177, 223, 177, 223, 189, 183, 189], 'box_score': 0.9633153676986694, 'text': 'army', 'text_score': 1.0}, {'box': [201, 190, 235, 190, 235, 204, 201, 204], 'box_score': 0.9714152216911316, 'text': '1887', 'text_score': 1.25}, {'box': [175, 213, 180, 201, 211, 212, 206, 225], 'box_score': 0.9704344868659973, 'text': 'vted', 'text_score': 0.9191176470588236}, {'box': [241, 213, 278, 200, 283, 213, 246, 227], 'box_score': 0.9607459902763367, 'text': 'epeople', 'text_score': 1.0}, {'box': [208, 224, 210, 212, 223, 214, 220, 227], 'box_score': 0.9337806701660156, 'text': 'by', 'text_score': 1.0}, {'box': [223, 214, 240, 214, 240, 226, 223, 226], 'box_score': 0.969144344329834, 'text': 'the', 'text_score': 1.0}]}]\n########################################\nMMocr Result: box located at [190, 37, 253, 31, 254, 46, 191, 52], box score is 0.9566415548324585.  Detected text is nboroughofs , text  score is 1.0...\nMMocr Result: box located at [253, 47, 257, 36, 287, 47, 282, 58], box score is 0.9649642705917358.  Detected text is fsouthw , text  score is 1.0...\nMMocr Result: box located at [157, 59, 188, 41, 194, 52, 163, 70], box score is 0.9521175622940063.  Detected text is londond , text  score is 0.9897959183673469...\nMMocr Result: box located at [280, 58, 286, 50, 306, 67, 300, 74], box score is 0.9397556781768799.  Detected text is thwark , text  score is 1.0...\nMMocr Result: box located at [252, 78, 295, 78, 295, 98, 252, 98], box score is 0.9694718718528748.  Detected text is hill , text  score is 1.0...\nMMocr Result: box located at [165, 78, 247, 78, 247, 99, 165, 99], box score is 0.9548642039299011.  Detected text is octavia , text  score is 1.0...\nMMocr Result: box located at [164, 105, 215, 103, 216, 121, 165, 123], box score is 0.9806956052780151.  Detected text is social , text  score is 1.0...\nMMocr Result: box located at [219, 104, 294, 104, 294, 122, 219, 122], box score is 0.9688025116920471.  Detected text is reformer , text  score is 1.0...\nMMocr Result: box located at [150, 124, 226, 124, 226, 141, 150, 141], box score is 0.9752051830291748.  Detected text is established , text  score is 1.0...\nMMocr Result: box located at [229, 124, 255, 124, 255, 140, 229, 140], box score is 0.94972825050354.  Detected text is this , text  score is 1.0...\nMMocr Result: box located at [259, 125, 305, 123, 306, 139, 260, 142], box score is 0.9752089977264404.  Detected text is garden , text  score is 1.1666666666666667...\nMMocr Result: box located at [166, 142, 193, 141, 194, 156, 167, 157], box score is 0.9731062650680542.  Detected text is hall , text  score is 1.0...\nMMocr Result: box located at [198, 142, 223, 142, 223, 156, 198, 156], box score is 0.9548938870429993.  Detected text is and , text  score is 1.0...\nMMocr Result: box located at [228, 144, 286, 144, 286, 159, 228, 159], box score is 0.977089524269104.  Detected text is cottages , text  score is 1.25...\nMMocr Result: box located at [180, 158, 205, 158, 205, 172, 180, 172], box score is 0.9400062561035156.  Detected text is and , text  score is 1.0...\nMMocr Result: box located at [210, 160, 279, 158, 279, 172, 210, 174], box score is 0.9543584585189819.  Detected text is pioneered , text  score is 1.0...\nMMocr Result: box located at [226, 176, 277, 176, 277, 188, 226, 188], box score is 0.9748533964157104.  Detected text is cadets , text  score is 1.0...\nMMocr Result: box located at [183, 177, 223, 177, 223, 189, 183, 189], box score is 0.9633153676986694.  Detected text is army , text  score is 1.0...\nMMocr Result: box located at [201, 190, 235, 190, 235, 204, 201, 204], box score is 0.9714152216911316.  Detected text is 1887 , text  score is 1.25...\nMMocr Result: box located at [175, 213, 180, 201, 211, 212, 206, 225], box score is 0.9704344868659973.  Detected text is vted , text  score is 0.9191176470588236...\nMMocr Result: box located at [241, 213, 278, 200, 283, 213, 246, 227], box score is 0.9607459902763367.  Detected text is epeople , text  score is 1.0...\nMMocr Result: box located at [208, 224, 210, 212, 223, 214, 220, 227], box score is 0.9337806701660156.  Detected text is by , text  score is 1.0...\nMMocr Result: box located at [223, 214, 240, 214, 240, 226, 223, 226], box score is 0.969144344329834.  Detected text is the , text  score is 1.0...\n")),(0,a.kt)("h2",{id:"integrate-access-to-your-custom-ai-capabilities"},"Integrate access to your custom AI capabilities"),(0,a.kt)("p",null,"For new AI capabilities, you need to develop and build your AI capability image according to the loader specification, and then deploy it to the cluster."),(0,a.kt)("p",null,"How to build your custom AI capability image, please refer to: ",(0,a.kt)("a",{parentName:"p",href:"https://iflytek.github.io/athena_website/docs/%E5%8A%A0%E8%BD%BD%E5%99%A8/Python%E6%8F%92%E4%BB%B6"},"Quick build wrapper.py")),(0,a.kt)("h2",{id:"more-details"},"more details"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"focus on:")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/iflytek"},(0,a.kt)("img",{parentName:"a",src:"https://avatars.githubusercontent.com/u/26786495?s=96&v=4",alt:"ifly"}))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"contact:")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/berlinsaint/readme/main/weixin_ybyang.jpg",alt:"weixin"})))}p.isMDXComponent=!0},3696:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/c++-e23975cb5828840b362d0761a717cf91.png"},2216:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/python-535813f7572c5b2cf0895fd36dfe0dcd.png"},6665:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/sealos4-run-k8s-2-97ee55405c9372fe1c382b7fb8f4f002.png"},1783:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/sealos4-run-k8s-3-844e7986a2f4a037d2a3a9da07e29ba1.png"},2514:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/sealos4-run-k8s-3c401909adde6b30aa8953c31bfd3291.png"}}]);