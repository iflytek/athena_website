"use strict";(self.webpackChunkathenaserving=self.webpackChunkathenaserving||[]).push([[1511],{5030:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"yolov7","metadata":{"permalink":"/athena_website/blog/yolov7","editUrl":"https://github.com/iflytek/athena_website/tree/master/blog/demo-yolov7.md","source":"@site/blog/demo-yolov7.md","title":"\u5feb\u901f\u5728AthenaServing\u6846\u67b6\u4e2d\u90e8\u7f72YoLoV7","description":"\u80cc\u666f","date":"2022-08-26T02:15:29.000Z","formattedDate":"2022\u5e748\u670826\u65e5","tags":[{"label":"python","permalink":"/athena_website/blog/tags/python"},{"label":"yolov7","permalink":"/athena_website/blog/tags/yolov-7"}],"readingTime":0.45,"hasTruncateMarker":false,"authors":[{"name":"sea-wyq","title":"Opensource AI Engineer","url":"https://github.com/sea-wyq","imageURL":"https://avatars.githubusercontent.com/u/22475606?v=4","key":"sea-wyq"}],"frontMatter":{"slug":"yolov7","title":"\u5feb\u901f\u5728AthenaServing\u6846\u67b6\u4e2d\u90e8\u7f72YoLoV7","authors":"sea-wyq","tags":["python","yolov7"]},"nextItem":{"title":"envd\u914d\u5408conda\u5b9e\u73b0\u7814\u7a76\u73af\u5883\u7684\u5feb\u901f\u8fc1\u79fb\u548c\u670d\u52a1\u90e8\u7f72","permalink":"/athena_website/blog/envd"}},"content":"## \u80cc\u666f\\n>YOLOv7 \u5728 5 FPS \u5230 160 FPS \u8303\u56f4\u5185\uff0c\u901f\u5ea6\u548c\u7cbe\u5ea6\u90fd\u8d85\u8fc7\u4e86\u6240\u6709\u5df2\u77e5\u7684\u76ee\u6807\u68c0\u6d4b\u5668\uff0c\u5e76\u5728 GPU V100 \u4e0a\uff0c30 FPS \u7684\u60c5\u51b5\u4e0b\u8fbe\u5230\u5b9e\u65f6\u76ee\u6807\u68c0\u6d4b\u5668\u7684\u6700\u9ad8\u7cbe\u5ea6 56.8% AP\u3002YOLOv7 \u662f\u5728 MS COCO \u6570\u636e\u96c6\u4e0a\u4ece\u5934\u5f00\u59cb\u8bad\u7ec3\u7684\uff0c\u4e0d\u4f7f\u7528\u4efb\u4f55\u5176\u4ed6\u6570\u636e\u96c6\u6216\u9884\u8bad\u7ec3\u6743\u91cd\u3002"},{"id":"envd","metadata":{"permalink":"/athena_website/blog/envd","editUrl":"https://github.com/iflytek/athena_website/tree/master/blog/envd\u8f85\u52a9\u4e1a\u52a1\u955c\u50cf\u6784\u5efa.md","source":"@site/blog/envd\u8f85\u52a9\u4e1a\u52a1\u955c\u50cf\u6784\u5efa.md","title":"envd\u914d\u5408conda\u5b9e\u73b0\u7814\u7a76\u73af\u5883\u7684\u5feb\u901f\u8fc1\u79fb\u548c\u670d\u52a1\u90e8\u7f72","description":"\u4ec0\u4e48\u662fEnvd?","date":"2022-08-26T02:15:29.000Z","formattedDate":"2022\u5e748\u670826\u65e5","tags":[{"label":"envd","permalink":"/athena_website/blog/tags/envd"},{"label":"conda","permalink":"/athena_website/blog/tags/conda"}],"readingTime":3.03,"hasTruncateMarker":false,"authors":[{"name":"sea-wyq","title":"Opensource AI Engineer","url":"https://github.com/sea-wyq","imageURL":"https://avatars.githubusercontent.com/u/22475606?v=4","key":"sea-wyq"}],"frontMatter":{"slug":"envd","title":"envd\u914d\u5408conda\u5b9e\u73b0\u7814\u7a76\u73af\u5883\u7684\u5feb\u901f\u8fc1\u79fb\u548c\u670d\u52a1\u90e8\u7f72","authors":"sea-wyq","tags":["envd","conda"]},"prevItem":{"title":"\u5feb\u901f\u5728AthenaServing\u6846\u67b6\u4e2d\u90e8\u7f72YoLoV7","permalink":"/athena_website/blog/yolov7"},"nextItem":{"title":"\u96c6\u6210\u4e09\u65b9API\u5b9e\u73b0Python\u52a0\u8f7d\u5668\u63d2\u4ef6","permalink":"/athena_website/blog/music/api"}},"content":"## \u4ec0\u4e48\u662fEnvd?\\n> \u901a\u8fc7\u7f16\u5199 Python \u4ee3\u7801\u6765\u8d1f\u8d23 Docker \u548c\u5f00\u53d1\u73af\u5883\u7684\u8bbe\u7f6e\uff0c\u56e0\u4e3a\u5f00\u53d1\u73af\u5883\u5145\u6ee1\u4e86 Dockerfile\u3001bash \u811a\u672c\u3001Kubernetes YAML \u6e05\u5355\u4ee5\u53ca\u8bb8\u591a\u5176\u4ed6\u603b\u662f\u4f1a\u4e2d\u65ad\u7684\u7b28\u91cd\u6587\u4ef6\u3002envd\u6784\u5efa\u662f\u9694\u79bb\u548c\u5e72\u51c0\u7684\u3002\u4f60\u53ef\u4ee5\u7528 Python \u7f16\u5199\u7b80\u5355\u7684\u6307\u4ee4\uff0c\u800c\u4e0d\u662f Bash / Makefile / Dockerfile / ...\uff0c\u5e76\u4e14envd\u63d0\u4f9b\u53ef\u91cd\u590d\u7684\u6784\u5efa\u548c\u53ef\u91cd\u73b0\u7684\u7ed3\u679c\u3002\\n\\n## \u7814\u7a76\u73b0\u72b6\\n\\n1. \u5f53\u524d\u7684\u7814\u7a76\u73af\u5883\u5b58\u5728conda\u7684\u4f7f\u7528\u89c4\u8303\u95ee\u9898\uff08\u4e00\u4e2a\u73af\u5883\u652f\u6301\u591a\u4e2a\u6a21\u578b\u8fdb\u884c\u63a8\u7406\u548c\u8bad\u7ec3\uff09\u4ee5\u53ca\u7814\u7a76\u73af\u5883\u5230\u63a8\u7406\u73af\u5883\u7684\u4f9d\u8d56\u4e0d\u5bf9\u7b49\u95ee\u9898\uff08\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u9700\u8981\u7684\u73af\u5883\u4f9d\u8d56\uff0c\u5728\u63a8\u7406\u8fc7\u7a0b\u4e2d\u5f80\u5f80\u4e0d\u5168\u662f\u5fc5\u987b\u7684\uff09\u3002\\n2. \u6ca1\u6709\u6709\u6548\u7684\u8f85\u52a9\u4ece\u7814\u7a76\u73af\u5883\u5230\u63a8\u7406\u73af\u5883\u8fc1\u79fb\u7684\u5de5\u5177\u94fe,\u5728\u8fc1\u79fb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f80\u5f80\u9700\u8981\u5f00\u53d1\u4eba\u5458\u81ea\u5df1\u53bb\u5b89\u88c5\u73af\u5883\u4f9d\u8d56,\u5e76\u5bf9\u4e1a\u52a1\u4ee3\u7801\u505a\u51fa\u4e00\u5b9a\u7684\u4fee\u6539\uff0c\u6d6a\u8d39\u4e86\u4eba\u529b\u3002\\n\\n## \u901a\u8fc7envd\u8f85\u52a9\u4e1a\u52a1\u6d41\u7a0b\u6784\u5efa\\n\\n#### \u9700\u8981\u7684\u6587\u4ef6\uff1a\\n    - conda yaml\u73af\u5883\u914d\u7f6e\u6587\u4ef6\\n    - \u7f16\u5199\u7684wrapper.py\u6587\u4ef6\\n    - \u6a21\u578b\u7684\u4ee3\u7801\u6587\u4ef6\\n    - \u4e1a\u52a1\u7684base\u955c\u50cf\\n    - \u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u7f16\u5199\u7684build.envd\u6587\u4ef6\\n\\n#### \u670d\u52a1\u6784\u5efa\u6d41\u7a0b\u56fe\uff1a   \\n\\n![img_1.png](prop-1.jpg)  \\n\\n#### base\u955c\u50cf\u7684\u6784\u5efa\u65b9\u6848\\n\\n- ubuntu + aiservice + cpu\\n- ubuntu + aiservice + gpu\\n\\n## \u901a\u8fc7envd\u5b9e\u73b0\u670d\u52a1\u73af\u5883\u8fc1\u79fb\u6848\u4f8b\\n\\n#### 1\u3001Requirements\\n- Docker (20.10.0 or above)\\n\\n#### 2\u3001envd \u5b89\u88c5\\n```\\npip install --pre --upgrade envd\\nenvd bootstrap\\n```\\n\\n#### 3\u3001\u5bfc\u51fa Conda env.yaml\u793a\u4f8b\\n\\n```\\nname: kyle\\n \\nchannels:\\n  - https://repo.anaconda.com/pkgs/main\\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/\\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/menpo/\\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/\\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/\\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/\\n  - defaults\\n \\ndependencies:\\n  - requests\\n  - pip:\\n    - opencv-python==4.1.2.30\\n \\nprefix: C:\\\\ProgramData\\\\Anaconda3\\\\envs\\\\kyle\\n \\n```\\n\\n#### 4\u3001\u7f16\u5199build.envd\u793a\u4f8b\\n```\\ndef build():\\n    mirror_config() \\n    base(language=\\"python3.8\\", os=\\"ubuntu20.4\\")                          # \u52a0\u8f7d\u57fa\u7840\u955c\u50cf\u5e76\u8bbe\u7f6econda\u5185\u7f6e\u7684python\u7248\u672c\\n    install.python_packages(name = [\\n        \\"torch==1.10\\",\\n        \\"openmim\\"\\n    ])\\n    install.conda_packages(channel= [\\"pytorch\\"], env_file = \\"env.yaml\\")   # \u6307\u5b9a\u8def\u5f84\u4e0b\u8fdb\u884cconda yaml\u73af\u5883\u5b89\u88c5\\n    install.python_packages(requirements=\\"build.txt\\")                     # \u6307\u5b9a\u8def\u5f84\u4e0b\u8fdb\u884crequirments.txt\u5b89\u88c5\\n    install.system_packages(name = [                                      # \u7cfb\u7edf\u4f9d\u8d56\u5b89\u88c5\\n        \\"libgl1-mesa-glx\\"\\n    ])\\n    run(commands=[\\n        \\"mim install mmcv-full\\",                                           # \u901a\u8fc7\u7b2c\u4e09\u65b9\u5de5\u5177mim\u6765\u8fdb\u884c\u5b89\u88c5\\n    ])\\n\\n    io.copy(src=\\"./detectron2\\", dest=\\"/\\")                                  # \u672c\u5730\u6587\u4ef6\u5230\u955c\u50cf\u7684\u62f7\u8d1d\\n    run(commands=[                                                         # \u79bb\u7ebf\u8fdb\u884c\u4f9d\u8d56\u5305\u5b89\u88c5\\n        \\"pip install -e /detectron2\\",\\n    ])\\ndef mirror_config():                                                       #\u4e0b\u8f7d\u6e90\u914d\u7f6e\\n    config.pip_index(url = \\"https://pypi.tuna.tsinghua.edu.cn/simple\\")\\n    config.conda_channel(channel=\\"\\"\\"\\n    channels:\\n    - defaults\\n    show_channel_urls: true\\n    default_channels:\\n    - https://repo.anaconda.com/pkgs/main\\n    - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\\n    - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\\n    - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/\\n    - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/menpo/\\n    - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/\\n    - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/\\n    - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/\\n    custom_channels:\\n    conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\\n    msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\\n    bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\\n    menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\\n    pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\\n    pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\\n    simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\\n    \\"\\"\\")\\n```\\n\\n#### 5\u3001\u901a\u8fc7envd\u6784\u5efa\u955c\u50cf\\n```\\nenvd build --t \u955c\u50cf\u540d:TAG\\n```"},{"id":"music/api","metadata":{"permalink":"/athena_website/blog/music/api","editUrl":"https://github.com/iflytek/athena_website/tree/master/blog/wrapper-third-api.md","source":"@site/blog/wrapper-third-api.md","title":"\u96c6\u6210\u4e09\u65b9API\u5b9e\u73b0Python\u52a0\u8f7d\u5668\u63d2\u4ef6","description":"\u96c6\u6210\u4e09\u65b9API\u5b9e\u73b0Python\u52a0\u8f7d\u5668\u63d2\u4ef6","date":"2022-08-26T02:15:29.000Z","formattedDate":"2022\u5e748\u670826\u65e5","tags":[{"label":"\u4e09\u65b9API","permalink":"/athena_website/blog/tags/\u4e09\u65b9api"},{"label":"Python\u52a0\u8f7d\u5668\u63d2\u4ef6","permalink":"/athena_website/blog/tags/python\u52a0\u8f7d\u5668\u63d2\u4ef6"}],"readingTime":6.005,"hasTruncateMarker":false,"authors":[{"name":"jhr","title":"Junior Engineer","url":"https://github.com/robbinlol","imageURL":"https://avatars.githubusercontent.com/u/10591513?v=4","key":"jhr"}],"frontMatter":{"slug":"music/api","title":"\u96c6\u6210\u4e09\u65b9API\u5b9e\u73b0Python\u52a0\u8f7d\u5668\u63d2\u4ef6","authors":"jhr","tags":["\u4e09\u65b9API","Python\u52a0\u8f7d\u5668\u63d2\u4ef6"]},"prevItem":{"title":"envd\u914d\u5408conda\u5b9e\u73b0\u7814\u7a76\u73af\u5883\u7684\u5feb\u901f\u8fc1\u79fb\u548c\u670d\u52a1\u90e8\u7f72","permalink":"/athena_website/blog/envd"},"nextItem":{"title":"Pybind11\u52a0\u901fAI\u6781\u901f\u843d\u5730","permalink":"/athena_website/blog/Pybind11\u52a0\u901fAI\u6781\u901f\u843d\u5730"}},"content":"## \u96c6\u6210\u4e09\u65b9API\u5b9e\u73b0Python\u52a0\u8f7d\u5668\u63d2\u4ef6\\n### \u80fd\u529b\\nAI\u80fd\u529b\u662f\u6307\u5df2\u5b8c\u6210\u4e91\u670d\u52a1\u5316\u7684AI\u5f15\u64ce\u3002\u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u80fd\u529b\u7684\u4f7f\u7528\u8005\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7API\u548c\u751f\u6210\u7684\u63a5\u53e3\u6587\u6863\u8fdb\u884c\u96c6\u6210\u53ca\u8c03\u7528\u3002\u5177\u4f53\u5b9a\u4e49\u53ef\u4ee5\u53c2\u8003[ASE\u5f15\u64ce\u540d\u8bcd\u89e3\u91ca](https://www.iflyaicloud.com/aipaas-doc/docs/01-%E4%BA%A7%E5%93%81%E4%BB%8B%E7%BB%8D/02-%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A.html)\\n### \u52a0\u8f7d\u5668\u63d2\u4ef6\\n\u80fd\u529b\u662f\u901a\u8fc7\u52a0\u8f7d\u5668\u63d2\u4ef6\u6765\u8c03\u7528\u3002\u8c03\u7528\u7684\u80fd\u529b\u4e0d\u4ec5\u5305\u542bAI\u80fd\u529b\u7684\u4f7f\u7528\uff0c\u666e\u901a\u7f51\u7edc\u8bf7\u6c42\u7684\u8c03\u7528\u540c\u6837\u9002\u7528\u3002\\n\\n\u5bf9\u4e8e\u975e\u6d41\u5f0f\u7684\u7f51\u7edc\u8bf7\u6c42\u2014\u2014HTTP\u8bf7\u6c42\u2014\u2014\u6765\u8bf4\uff0c\u63d2\u4ef6\u7684\u4e3b\u4f53\u5305\u62ec\u56db\u6b65\uff1b\u52a0\u8f7d\u5668\u7684\u521d\u59cb\u5316\uff1b\u52a0\u8f7d\u5668\u7684\u5b8c\u6210\uff1b\u52a0\u8f7d\u5668\u7684\u6267\u884c\uff1b\u52a0\u8f7d\u5668\u7684\u9519\u8bef\u5904\u7406\u3002\u5206\u522b\u5bf9\u5e94\u4e86\u56db\u4e2a\u6267\u884c\u51fd\u6570`wrapperInit`\uff1b`wrapperFini`\uff1b`wrapperOnceExec`\uff1b`wrapperError`\u3002\\n\\n\u901a\u5e38\u52a0\u8f7d\u5668\u63d2\u4ef6\u5b9e\u73b0\u91c7\u7528\u4e86C++\u8bed\u8a00\uff0c\u5bf9\u4e8e\u719f\u8c19C++\u8bed\u8a00\u7684\u7528\u6237\u6765\u8bf4\u6beb\u65e0\u538b\u529b\uff0c\u5f53\u4e86\u89e3\u52a0\u8f7d\u5668\u63d2\u4ef6\u7684\u8fd0\u884c\u6d41\u7a0b\u3001\u6570\u636e\u8f93\u5165\u548c\u8f93\u51fa\u65b9\u5f0f\u540e\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684\u52a0\u8f7d\u5668\u63d2\u4ef6\uff0c\u968f\u5373\u901a\u8fc7\u7f16\u8bd1\u6210**\u52a8\u6001\u5e93\u6587\u4ef6**\u540e\u53ef\u8c03\u7528\u3002\\n\\nPython\u662f\u4e00\u79cd\u5f31\u7c7b\u578b\u8bed\u97f3\uff0c\u76f8\u6bd4\u4e8eC++\uff0cPython\u66f4\u5c0f\u5de7\u7cbe\u608d\uff0c\u7528\u6237\u4e5f\u80fd\u591f\u66f4\u5bb9\u6613\u4e0a\u624b\u6784\u5efa\u52a0\u8f7d\u5668\u63d2\u4ef6\u3002\\n\\n**\u672c\u4f8b\u4e3b\u8981\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u8c03\u7528[\u4e09\u65b9\u97f3\u4e50\u8bc6\u522bAPI](https://docs.acrcloud.cn/api-reference/identification-api)\u7684Python\u52a0\u8f7d\u5668\u63d2\u4ef6\u5b9e\u73b0\u6b65\u9aa4\u3002\u8c03\u7528\u97f3\u4e50\u8bc6\u522bAPI\u65f6\u7528\u6237\u4f1a\u53d1\u9001\u5f85\u8bc6\u522b\u97f3\u4e50\u7684\u4e8c\u8fdb\u5236\u6d41\u6570\u636e\uff0c\u97f3\u4e50\u683c\u5f0f\u652f\u6301mp3\u3001wav\u3001wma\u3001amr\u3001ogg\u3001ape\u3001acc\u3001spx\u3001m4a\u3001mp4\u3001FLAC\u7b49\uff0c\u8fd4\u56de\u7684\u8bc6\u522b\u7ed3\u679c\u662fJSON\u5bf9\u8c61\u3002**\\n\\n### \u5b9e\u73b0\u52a0\u8f7d\u5668\u63d2\u4ef6\\n**\u52a0\u8f7d\u5668\u63d2\u4ef6\u521d\u59cb\u5316\u51fd\u6570**`wrapperInit`\u7528\u4e8e\u521d\u59cb\u5316\u52a0\u8f7d\u5668\u6267\u884c\u8fc7\u7a0b\u4e2d\u7528\u5230\u7684\u53d8\u91cf\uff0c\u8fd9\u4e9b\u53c2\u6570\u4ece\u914d\u7f6e\u6587\u4ef6`config`\u4e2d\u8bfb\u5165\uff0c\u5176\u4e2d**requrl**\u662f\u53d1\u9001\u8bf7\u6c42\u7684\u5730\u5740\u3002\\n```python\\nglobal requrl, http_method, http_uri\\nglobal access_key_music, access_secret_music, access_key_humming, access_secret_humming\\n\\nrequrl, http_method, http_uri = config[\'requrl\'], config[\'http_method\'], config[\'http_uri\']\\naccess_key_music, access_secret_music = config[\'access_key_music\'], config[\'access_secret_music\']\\naccess_key_humming, access_secret_humming = config[\'access_key_humming\'], config[\'access_secret_humming\']\\n```\\n\\n**\u52a0\u8f7d\u5668\u63d2\u4ef6\u6267\u884c\u51fd\u6570**`wrapperOnceExec`\u7684\u6267\u884c\u7531**\u9274\u6743**\u3001**\u53d1\u9001HTTP\u8bf7\u6c42**\u548c**\u63a5\u6536\u54cd\u5e94\u6570\u636e**\u6784\u6210\u3002\\n\\n- \u9274\u6743\u7684\u7b7e\u540d\u662f\u901a\u8fc7`http_method`\u3001`http_uri`\u3001`access_key`\u3001`data_type`\u3001`signature_version`\u4ee5\u53ca`\u65f6\u95f4\u6233`\u7b49\u6765\u6784\u5efa\uff0c\u6784\u5efa\u8fc7\u7a0b\u5982\u4e0b\uff1a\\n    ```python\\n    signature_version, data_type = \'1\', \'audio\'\\n\\n    timestamp = time.time()\\n\\n    string_to_sign = http_method + \'\\\\n\' \\\\\\n                    + http_uri + \'\\\\n\' \\\\\\n                    + access_key + \'\\\\n\' \\\\\\n                    + data_type + \'\\\\n\' \\\\\\n                    + signature_version + \'\\\\n\' \\\\\\n                    + str(timestamp)\\n    sign = base64.b64encode(hmac.new(access_secret.encode(\'ascii\'), string_to_sign.encode(\'ascii\'),\\n                                    digestmod=hashlib.sha1).digest()).decode(\'ascii\')\\n\\n    if sign is None:\\n        logging.error(\'HMAC failure.\')\\n        return 5014\\n    ```\\n- HTTP\u8bf7\u6c42\u4f53\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u62ec\u4e86`\u8bf7\u6c42\u6570\u636e`\u3001`access_key`\u3001`\u6570\u636e\u7684\u957f\u5ea6`\u3001`\u65f6\u95f4\u6233`\u3001`\u7b7e\u540d`\u3001`data_type`\u548c`signature_version`\u7b49\u3002\\n\\n    \u6784\u5efa\u7684HTTP\u8bf7\u6c42\u4f53\u5982\u4e0b\uff1a\\n    ```python\\n    files = {\'sample\': src}\\n    data = {\\n        \'access_key\': access_key,\\n        \'sample_bytes\': sample_bytes,\\n        \'timestamp\': str(timestamp),\\n        \'signature\': sign,\\n        \'data_type\': data_type,\\n        \'signature_version\': signature_version\\n    }\\n    r = requests.post(requrl, files=files, data=data, timeout=5)\\n    ```\\n\\n- \u6b64\u5916\uff0c\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9519\u8bef\u9700\u8981**\u5c3d\u53ef\u80fd\u65e9**\u6355\u83b7\uff0c\u9519\u8bef\u7801\u4e5f\u8981\u548c\u7b2c\u4e09\u65b9\u5e73\u53f0\u533a\u522b\u5f00\u6765\uff0c\u5373\u4f7f\u662f\u9ed8\u8ba4\u7684HTTP\u9519\u8bef\u7801\u4e5f\u8981\u6709\u8fa8\u522b\u4e5f\u597d\uff0c\u65b9\u4fbf\u5b9a\u4f4d\u9519\u8bef\u3002\\n    ```python\\n    try:\\n        r = requests.post(requrl, files=files, data=data, timeout=5)\\n    except requests.exceptions.ConnectTimeout:\\n        logging.error(\'Http post timeout.\')\\n        return 4408# http timeout\\n\\n    if r is None:\\n        logging.error(\\"HTTP\u5185\u5bb9\u975e\u6cd5\\")\\n        return 4003\\n    if r.status_code != 200:\\n        return 4000 + r.status_code\\n    ```\\n\\n- \u8bf7\u6c42\u7684\u54cd\u5e94\u6570\u636e\u662fJSON\u683c\u5f0f\uff0c\u6709\u4e09\u4e2a\u5b57\u6bb5\uff1a\\n    ```json\\n    {\\n    \\"cost_time\\":...\\n    \\"status\\":...\\n    \\"metadata\\":...\\n    }\\n    ```\\n\\n    \u5176\u4e2d`status`\u5b57\u6bb5\u4e2d\u7684`code`\u4ee3\u8868\u4e86\u54cd\u5e94\u7684\u72b6\u6001\uff0c\u4e3a0\u8868\u793a\u8bf7\u6c42\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25\u3002\u6240\u4ee5\u5e94\u8be5\u5224\u65ad`code`\u7684\u53d6\u503c\uff0c\u5f53\u4e0d\u4e3a\u96f6\u65f6\u5219\u63d0\u524d\u8fd4\u56de`code`\u8868\u793a\u7684\u9519\u8bef\u7801\\n\\n    ```python\\n    pattern = re.compile(\'\\"code\\":\\\\d+\')\\n    error_code = re.findall(pattern, r.text)\\n    error_code = error_code[0].split(\':\')[-1]\\n    if int(error_code):\\n        return int(error_code)\\n    ```\\n\\n    \u54cd\u5e94\u6210\u529f\u5219\u8fd4\u56de\u4e00\u4e2a\u9884\u5148\u5b9a\u4e49\u597d\u7684\u5b57\u5178\u8868\u793a\uff1a\\n\\n    ```python\\n    r.encoding = \'utf-8\'\\n\\n    respData.append({\\n        \'key\': \'output_text\',\\n        \'type\': 0,\\n        \'status\': 3,\\n        \\"data\\": r.text,\\n        \\"len\\": len(r.text.encode())\\n    })\\n    ```\\n\\n**\u52a0\u8f7d\u5668\u63d2\u4ef6\u9519\u8bef\u5904\u7406\u51fd\u6570**`wrapperError`\u5c06\u4f1a\u8fd4\u56de\u9519\u8bef\u7801\u4ee3\u8868\u7684\u542b\u4e49\uff0c\u5728\u672c\u4f8b\u4e2d\u5982\u4e0b\\n```python\\nif ret == 1001:\\n    return \\"\u8bc6\u522b\u65e0\u7ed3\u679c\\"\\nelif ret == 2000:\\n    return \\"\u5f55\u97f3\u5931\u8d25\uff0c\u53ef\u80fd\u662f\u8bbe\u5907\u6743\u9650\u95ee\u9898\\"\\nelif ret == 2001:\\n    return \\"\u521d\u59cb\u5316\u9519\u8bef\u6216\u8005\u521d\u59cb\u5316\u8d85\u65f6\\"\\nelif ret == 2002:\\n    return \\"\u5904\u7406metadata\u9519\u8bef\\"\\nelif ret == 2004:\\n    return \\"\u65e0\u6cd5\u751f\u6210\u6307\u7eb9\uff08\u6709\u53ef\u80fd\u662f\u9759\u97f3\uff09\\"\\nelif ret == 2005:\\n    return \\"\u8d85\u65f6\\"\\nelif ret == 3000:\\n    return \\"\u670d\u52a1\u7aef\u9519\u8bef\\"\\nelif ret == 3001:\\n    return \\"Access Key\u4e0d\u5b58\u5728\u6216\u9519\u8bef\\"\\nelif ret == 3002:\\n    return \\"HTTP\u5185\u5bb9\u975e\u6cd5\\"\\nelif ret == 3003:\\n    return \\"\u8bf7\u6c42\u6570\u8d85\u51fa\u9650\u5236\uff08\u9700\u8981\u5347\u7ea7\u8d26\u53f7\uff09\\"\\nelif ret == 3006:\\n    return \\"\u53c2\u6570\u975e\u6cd5\\"\\nelif ret == 3014:\\n    return \\"\u7b7e\u540d\u975e\u6cd5\\"\\nelif ret == 3015:\\n    return \\"QPS\u8d85\u51fa\u9650\u5236\uff08\u9700\u8981\u5347\u7ea7\u8d26\u53f7\uff09\\"\\nelse:\\n    return f\\"User Defined Error: {ret}\\"\\n```\\n\\n**\u52a0\u8f7d\u5668\u63d2\u4ef6\u5b8c\u6210\u51fd\u6570**`wrapperFini`\u7528\u4e8e\u5904\u7406\u4e00\u4e9b\u52a0\u8f7d\u5668\u7684\u6536\u5c3e\u5de5\u4f5c\uff0c\u5728C++\u8bed\u8a00\u4e2d\u91cc\u9762\u4f1a\u6267\u884c\u4e00\u4e9b\u5806\u533a\u548c\u6307\u9488\u7684\u91ca\u653e\uff0c\u5bf9\u4e8ePython\u8bed\u8a00\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u5b9e\u73b0\uff1a\\n```python\\ndef wrapperFini() -> int:\\n    logging.info(\'Wrapper finished.\')\\n    return 0\\n```\\n**\u4ee5\u4e0a\u5c31\u662f\u4e00\u4e2a\u8c03\u7528\u4e09\u65b9API\u7684Python\u52a0\u8f7d\u5668\u5b9e\u73b0\u7684\u7b80\u5355\u4ecb\u7ecd**\\n\u5177\u4f53\u4ee3\u7801\u53ef\u4ee5\u53c2\u8003[\u96c6\u6210\u4e09\u65b9API\u5b9e\u73b0Python\u52a0\u8f7d\u5668\u63d2\u4ef6](https://github.com/xfyun/aiges/tree/master/demo/music_api)"},{"id":"Pybind11\u52a0\u901fAI\u6781\u901f\u843d\u5730","metadata":{"permalink":"/athena_website/blog/Pybind11\u52a0\u901fAI\u6781\u901f\u843d\u5730","editUrl":"https://github.com/iflytek/athena_website/tree/master/blog/2022-08-01-pybind11.md","source":"@site/blog/2022-08-01-pybind11.md","title":"Pybind11\u52a0\u901fAI\u6781\u901f\u843d\u5730","description":"\u8fd8\u5728\u60f3\u5982\u4f55\u5077\u61d2\uff0c\u76f4\u63a5\u590d\u7528\u7814\u7a76\u5458\u7684Python\u4ee3\u7801\u8fdb\u884c\u5728\u7ebf\u63a8\u7406\uff1f","date":"2022-08-01T00:00:00.000Z","formattedDate":"2022\u5e748\u67081\u65e5","tags":[{"label":"pybind11","permalink":"/athena_website/blog/tags/pybind-11"},{"label":"ai","permalink":"/athena_website/blog/tags/ai"},{"label":"python","permalink":"/athena_website/blog/tags/python"},{"label":"athenaserving","permalink":"/athena_website/blog/tags/athenaserving"}],"readingTime":14.535,"hasTruncateMarker":false,"authors":[{"name":"ybyang7","title":"Opensource AI Engineer","url":"https://github.com/berlinsaint","imageURL":"https://avatars.githubusercontent.com/u/10629930?v=4","key":"ybyang7"}],"frontMatter":{"slug":"Pybind11\u52a0\u901fAI\u6781\u901f\u843d\u5730","title":"Pybind11\u52a0\u901fAI\u6781\u901f\u843d\u5730","authors":["ybyang7"],"tags":["pybind11","ai","python","athenaserving"]},"prevItem":{"title":"\u96c6\u6210\u4e09\u65b9API\u5b9e\u73b0Python\u52a0\u8f7d\u5668\u63d2\u4ef6","permalink":"/athena_website/blog/music/api"},"nextItem":{"title":"\u5feb\u901f\u90e8\u7f72AthenaServing\u6846\u67b6 (Sealos 4.x)","permalink":"/athena_website/blog/sealos4-athenaserving"}},"content":"\u8fd8\u5728\u60f3\u5982\u4f55\u5077\u61d2\uff0c\u76f4\u63a5\u590d\u7528\u7814\u7a76\u5458\u7684Python\u4ee3\u7801\u8fdb\u884c\u5728\u7ebf\u63a8\u7406\uff1f\\n\\n\u8fd8\u5728\u5bfb\u627e\u6a21\u578b\u63a8\u7406RPC->HTTP\u65b9\u6848\uff1f\\n\\n\u8fd8\u5728\u627e C/C++ \u8c03\u7528 Python, Python\u8c03\u7528 C/C++\u6280\u672f\u65b9\u6848\uff1f\\n\\n\\n\u8fd8\u5728\u627e\u5982\u4f55\u63d0\u901fPython\u65b9\u6848\uff1f\\n\\n....\\n\\n## \u4f60\u5728\u627e\u7684\u8fd9\u91cc\u90fd\u6709\\n\\n\u5f53\u524d\u7b97\u6cd5\u5f00\u53d1\u4e3b\u6d41\u8bed\u8a00\u90fd\u662fPython\u8bed\u8a00\uff0c \u800c\u60f3\u8981\u843d\u5730\u6210\u4e3a\u751f\u4ea7\u7ea7\u522b\u670d\u52a1\u5e94\u7528\uff0c\u5f80\u5f80\u9700\u8981\u7528C/C++\u7b49\u9ad8\u9636\u8bed\u8a00\u8fdb\u884c\u590d\u73b0\u5e76\u5c01\u88c5\u6210\u9ad8\u6027\u80fd\u63a5\u53e3\u3002\\n\\n\u4f46\u662f\u5e76\u975e\u6240\u6709\u7684\u573a\u666f\u90fd\u662f\u9700\u8981\u9ad8\u6027\u80fd\uff0c\u4efb\u4f55\u670d\u52a1\u63a5\u53e3\u7684\u9ad8\u6027\u80fd\u7684\u4f18\u5316\u90fd\u662f\u5faa\u5e8f\u6e10\u8fdb\u7684\uff0c\u76ee\u524d\u5f88\u591a\u5382\u5546\u90fd\u4f1a\u9009\u62e9\u7528Python\u8fdb\u884c\u5b9e\u9645\u63a8\u7406\uff0c \u8baf\u98de\u5f53\u524d\u62e5\u6709\\n\\n\u4e00\u5957Golang\u52a0\u8f7dC\u63d2\u4ef6\u65b9\u6848\uff0c\u6765\u652f\u6301\u5f53\u524d\u8baf\u98de\u4e3b\u8981\u7684\u4e00\u4e9bAI\u7ebf\u4e0a\u751f\u4ea7\u7ea7\u522b\u670d\u52a1\u5e94\u7528\u3002\\n\\n\u4e3a\u4e86\u8ba9\u7528\u6237\u66f4\u5feb\u901f\u7684\u63a5\u5165Python\u5b9e\u73b0\u7684\u80fd\u529b\uff0c \u5728\u5f53\u524d\u8baf\u98deAIGES\u67b6\u6784\u57fa\u7840\u4e0a\uff0c\u5229\u7528Pybind11\u517c\u5bb9\u4e86\u652f\u6301Python AI\u80fd\u529b\u670d\u52a1\u5316\u3002\\n\\n## Go/C\u3001C++\u67b6\u6784\\n![img](imgs/c%2B%2B.png)\\n\\n## \u652f\u6301wrapper.py Go/C/Python \u67b6\u6784\\nPython Language Wrapper:\\n![img](imgs/python.png)\\n\\n\u8baf\u98de\u5f00\u6e90\u51fa\u54c1\u7684 AthenaServing\u662f\u4e00\u4e2a\u5c06 Python AI\u80fd\u529b(\u4e5f\u53ef\u4ee5\u652f\u6301C/C++)\u53d1\u5e03\u6210\u4e3aHTTP\u670d\u52a1\u7684 AI\u5de5\u7a0b\u6846\u67b6\uff0c\u8be6\u60c5\u8bf7\u53c2\u8003: [Github](https://github.com/xfyun/aiges)\\n\\n## C\u8c03\u7528Python\\n\\n\u7531\u4e0a\u8ff0\u67b6\u6784\u53ef\u77e5\uff0c \u6211\u4eec\u9700\u8981\u4f7f\u7528C++\u8c03\u7528Python\u80fd\u529b(Golang\u65e0\u6cd5\u76f4\u63a5\u8c03\u7528Python,\u6211\u4eec\u6280\u672f\u6808\u662fGolang)\u3002\\n\\n### Python\u539f\u751f\u65b9\u6848\\n\u4f20\u7edf\u7684C\u8c03\u7528Python\uff0c\u5927\u591a\u6570\u4eba\u90fd\u4f1a\u4f7f\u7528\u539f\u751f\u7684Cpython\u5f62\u5f0f\u53bb\u8c03\u7528Python\uff0c\u6211\u4eec\u5728[\u7b2c\u4e00\u4e2a\u7248\u672c](https://github.com/xfyun/aiges_c_python_wrapper/blob/release-v1.0.0/pyCall_common.cpp)\u65f6\u4e5f\u662f\u5982\u6b64,\u5176\u590d\u6742\u5ea6\u4e0d\u8a00\u800c\u55bb\uff0c\u8bbe\u8ba1\u5230Python\u7684\u751f\u547d\u5468\u671f\u7ba1\u7406\uff0c\u5185\u5b58\u7ba1\u7406\uff0cGIL\uff0c\u5f15\u7528\u8ba1\u6570\uff0c\u5bf9\u8c61\u8f6c\u6362\u7b49\u7b49...\\n\\n\\nPython \u5b98\u65b9\u63d0\u4f9b\u4e86 Python/C API\uff0c\u53ef\u4ee5\u5b9e\u73b0\u300c\u7528 C \u8bed\u8a00\u7f16\u5199 Python \u5e93\u300d\uff0c\u5148\u4e0a\u4e00\u6bb5\u4ee3\u7801\u611f\u53d7\u4e00\u4e0b\uff1a\\n\\n```c++\\nstatic PyObject *\\nspam_system(PyObject *self, PyObject *args)\\n{\\n    const char *command;\\n    int sts;\\n\\n    if (!PyArg_ParseTuple(args, \\"s\\", &command))\\n        return NULL;\\n    sts = system(command);\\n    return PyLong_FromLong(sts);\\n}\\n```\\n\\n\u4e0a\u8ff0\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5bf9python system\u547d\u4ee4\u8fdb\u884c\u8c03\u7528\uff0c\u5374\u8981\u8fdb\u884c\u591a\u6b21\u624b\u52a8\u7c7b\u578b\u8f6c\u6362\uff0c\u5341\u5206\u75db\u82e6\u3002\u3002\\n\\n\\n### Cython\u65b9\u6848\\n\\nCython \u4e3b\u8981\u6253\u901a\u7684\u662f Python \u548c C\uff0c\u65b9\u4fbf\u4e3a Python \u7f16\u5199 C \u6269\u5c55\u3002Cython \u7684\u7f16\u8bd1\u5668\u652f\u6301\u8f6c\u5316 Python \u4ee3\u7801\u4e3a C \u4ee3\u7801\uff0c\u8fd9\u4e9b C \u4ee3\u7801\u53ef\u4ee5\u8c03\u7528 Python/C \u7684 API\u3002\u4ece\u672c\u8d28\u4e0a\u6765\u8bf4\uff0cCython \u5c31\u662f\u5305\u542b C \u6570\u636e\u7c7b\u578b\u7684 Python\u3002\u76ee\u524d Python \u7684 numpy\uff0c\u4ee5\u53ca\u817e\u8baf\u7684 tRPC-Python \u6846\u67b6\u6709\u6240\u5e94\u7528\u3002\\n\\n\u7f3a\u70b9\uff1a\\n\u9700\u8981\u624b\u52a8\u690d\u5165 Cython \u81ea\u5e26\u8bed\u6cd5\uff08cdef \u7b49\uff09\uff0c\u79fb\u690d\u548c\u590d\u7528\u6210\u672c\u9ad8\\n\u9700\u8981\u589e\u52a0\u5176\u4ed6\u6587\u4ef6\uff0c\u5982 setup.py\u3001*.pyx \u6765\u8ba9\u4f60\u7684 Python \u4ee3\u7801\u6700\u540e\u80fd\u591f\u8f6c\u6210\u6027\u80fd\u8f83\u9ad8\u7684 C \u4ee3\u7801\\n\u5bf9\u4e8e C++\u7684\u652f\u6301\u7a0b\u5ea6\u5b58\u7591\\n\\n\\n### SWIG\\nSWIG \u4e3b\u8981\u89e3\u51b3\u5176\u4ed6\u9ad8\u7ea7\u8bed\u8a00\u4e0e C \u548c C++\u8bed\u8a00\u4ea4\u4e92\u7684\u95ee\u9898\uff0c\u652f\u6301\u5341\u51e0\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u62ec\u5e38\u89c1\u7684 java\u3001C#\u3001javascript\u3001Python \u7b49\u3002\u4f7f\u7528\u65f6\u9700\u8981\u7528*.i \u6587\u4ef6\u5b9a\u4e49\u63a5\u53e3\uff0c\u7136\u540e\u7528\u5de5\u5177\u751f\u6210\u8de8\u8bed\u8a00\u4ea4\u4e92\u4ee3\u7801\u3002\u4f46\u7531\u4e8e\u652f\u6301\u7684\u8bed\u8a00\u4f17\u591a\uff0c\u56e0\u6b64\u5728 Python \u7aef\u6027\u80fd\u8868\u73b0\u4e0d\u662f\u592a\u597d\u3002\\n\\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cTensorFlow \u65e9\u671f\u4e5f\u662f\u4f7f\u7528 SWIG \u6765\u5c01\u88c5 Python \u63a5\u53e3\uff0c\u6b63\u5f0f\u7531\u4e8e SIWG \u5b58\u5728\u6027\u80fd\u4e0d\u591f\u597d\u3001\u6784\u5efa\u590d\u6742\u3001\u7ed1\u5b9a\u4ee3\u7801\u6666\u6da9\u96be\u8bfb\u7b49\u95ee\u9898\uff0cTensorFlow \u5df2\u4e8e 2019 \u5e74\u5c06 SIWG \u5207\u6362\u4e3a [pybind11](#PYBIND11)\u3002\\n\\n\\n### PYBIND11\\n\\n\u5728pybind11 \u4e4b\u524d\u5176\u5b9e\u6709\u4e00\u4e2aboost.python\u5e93\u4e5f\u662f\u7ecf\u5178\uff0c\u4f46\u662f\u5b83\u6bd4\u8f83\u91cd\u5ea6\u4f9d\u8d56 boost\u5468\u8fb9\u4f9d\u8d56\u5e93\uff0c\u6bd4\u8f83\u5e9e\u5927\uff0c\u7ecf\u5e38\u8ba9\u4eba\u671b\u800c\u5374\u6b65.\\n\\npybind11 \u53ef\u4ee5\u7406\u89e3\u4e3aboost.python\u7684\u7cbe\u7b80\u7248\uff0c\u901a\u8fc7\u63d0\u4f9b\u5934\u6587\u4ef6\uff0c\u5b8f\u5b9a\u4e49\u548c\u5143\u7f16\u7a0b\u6765\u7b80\u5316 Python \u7684 API \u8c03\u7528\u3002\u5bf9 C++\u652f\u6301\u975e\u5e38\u597d\uff0c\u57fa\u4e8e C++11 \u5e94\u7528\u4e86\u5404\u79cd\u65b0\u7279\u6027\uff0c\u4e5f\u8bb8 pybind11 \u7684\u540e\u7f00 11 \u5c31\u662f\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\u3002\\n\\n\u7279\u70b9\uff1a\\n\\n* \u8f7b\u91cf\u4e14\u529f\u80fd\u5355\u4e00\uff0c\u805a\u7126\u4e8e\u63d0\u4f9b C++ & Python binding\uff0c\u4ea4\u4e92\u4ee3\u7801\u7b80\u6d01\\n* \u5bf9\u5e38\u89c1\u7684 C++\u6570\u636e\u7c7b\u578b\u5982 STL\u3001Python \u5e93\u5982 numpy \u7b49\u517c\u5bb9\u5f88\u597d\uff0c\u65e0\u4eba\u5de5\u8f6c\u6362\u6210\u672c\\n* only header \u65b9\u5f0f\uff0c\u65e0\u9700\u989d\u5916\u4ee3\u7801\u751f\u6210\uff0c\u7f16\u8bd1\u671f\u5373\u53ef\u5b8c\u6210\u7ed1\u5b9a\u5173\u7cfb\u5efa\u7acb\uff0c\u51cf\u5c0f binary \u5927\u5c0f\\n* \u652f\u6301 C++\u65b0\u7279\u6027\uff0c\u5bf9 C++\u7684\u91cd\u8f7d\u3001\u7ee7\u627f\uff0cdebug \u65b9\u5f0f\u4fbf\u6377\u6613\u7528\\n* \u5b8c\u5584\u7684\u5b98\u65b9[\u6587\u6863](https://pybind11.readthedocs.io/)\u652f\u6301\uff0c\u5e94\u7528\u4e8e\u591a\u4e2a\u77e5\u540d\u5f00\u6e90\u9879\u76ee\\n\\n## C++\u4e0epython\u5171\u821e\uff0cc++ python\u4e92\u8c03\u7528\\n\\n* AIGes\u4e2dC++\u7ed3\u5408Pybind11\u8c03\u7528Python \\n\\n\u5982[\u4e0a\u8ff0](#\u652f\u6301wrapperpy-gocpython-\u67b6\u6784)\u6240\u793a,\u6211\u4eec\u4e3a\u7528\u6237\u8bbe\u8ba1\u4e86class Wrapper\u7c7b\uff0c\u7528\u6237\u9700\u8981\u5b9e\u73b0Wrapper\u7c7b\u4e2d\u7684\u5fc5\u8981\u65b9\u6cd5\uff0c\u7136\u540e\u7531C++\u8bfb\u53d6\u8be5\u7c7b\u5e76\u52a0\u8f7d\u5bf9\u5e94\u65b9\u6cd5\uff0c\u5f53\u7528\u6237\u8bf7\u6c42\u5230\u8fbe\u65f6\uff0c\u6267\u884c\u5bf9\u5e94python\u65b9\u6cd5\uff0c\u5e76\u8fd4\u56de\u5f97\u5230\u76f8\u5e94\u6570\u636e\u5b8c\u6210\u4e00\u6b21\u63a8\u7406\u8bf7\u6c42\u3002\\n\\n* C\u4e2d\u4f20\u5165\u6570\u636e\u5230 wrapperOnceExec,python\u5982\u4f55\u63a5\u53d7\uff1f\\n\\n\u6211\u4eec\u91cd\u70b9\u770b\u4e0b `Wrapper` \u7c7b\u7684\u5173\u952e\u63a8\u7406\u65b9\u6cd5 `wrapperOnceExec` \u65b9\u6cd5, \u8be5\u65b9\\n\u6cd5\u51fd\u6570\u5b9a\u4e49\u4e3a:\\n\\n```python\\n\\ndef wrapperOnceExec(self, params: {}, reqData: DataListCls) -> Response:\\n    pass\\n```\\n\\n\u5176\u4e2d `params` \u4e3a\u8be5\u8bf7\u6c42\u4e2d\u7684params\u8bf7\u6c42\u53c2\u6570\u6620\u5c04\uff0c\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u4e3b\u8981\u7528\u4e8e\u4f20\u9012\u7528\u6237\u4e00\u4e9b\u8bf7\u6c42\u63a7\u5236\u5b57\u6bb5\u3002\\n\\n `reqData` \u4e3a\u8be5\u6b21\u8bf7\u6c42\u7684\u4e00\u4e9b\u6570\u636e\u6bb5\uff0c\u6bd4\u5982\u4e0a\u4f20\u4e00\u4e2a\u4e8c\u8fdb\u5236\u56fe\u50cf\uff0c\u97f3\u9891\uff0c\u6587\u672c\u7b49(\u6b64\u7c7b\u53c2\u6570\u4e0d\u9002\u5408\u653e\u5165params\u4e2d)\uff0creqData\u6211\u4eec\u8981\u6c42\u5b83\u5fc5\u987b\u662f1\u4e2a`DataListCls`\u7c7b. \u8fd9\u4e2a\u7c7b\u6709\u4e9b\u7279\u6b8a\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u6570\u636e\u662f\u6765\u6e90\u4e8e C++,\u5373\u4eceC++\u4e2d\u4f20\u5165\u6570\u636e\u5230Python\uff0c\u56e0\u6b64\u8fd9\u4e2a\u8bf7\u6c42\u5fc5\u987b\u5728 c++\u4fa7\u6784\u9020\uff0c\u90a3\u4e48\u6b64\u5904\u5c31\u6d89\u53ca\u5230 C++\u6570\u636e\u548cPython\u6570\u636e\u7684\u8f6c\u6362\u95ee\u9898\u3002\\n\\n Pybind11\u63d0\u4f9b\u4e86\u5728C\u4e2d\u5b9a\u4e49\u5185\u5d4c(embed)python\u6a21\u5757\u65b9\u5f0f: \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728C\u4e2d\u7ed9python\u5f88\u5bb9\u6613\u5b9a\u4e49\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u6bd4\u5982\u6b64\u5904:\\n\\n```c++\\nclass DataListNode {\\npublic:\\n    std::string key;\\n    py::bytes data;\\n    unsigned int len;\\n    int type;\\n\\n    py::bytes get_data();\\n};\\n\\nclass DataListCls {\\npublic:\\n    std::vector <DataListNode> list;\\n\\n    DataListNode *get(std::string key);\\n};\\n\\nDataListNode *DataListCls::get(std::string key) {\\n    for (int idx = 0; idx < list.size(); idx++) {\\n        DataListNode *node = &list[idx];\\n        if (strcmp(node->key.c_str(), key.c_str()) == 0) {\\n            return node;\\n        }\\n    }\\n    return nullptr;\\n}\\n```\\n\\n\u5728c++\u4e2d\u5b9a\u4e49\u4e86\u4e24\u4e2a\u7c7b\u7ed3\u6784\uff0c \u4e00\u4e2a\u662f `DataListCls` \u53e6\u4e00\u4e2a\u662f `DataListNode`, \u540e\u8005\u662f\u524d\u8005\u7684 `list` \u53d8\u91cf\u6210\u5458\u3002\\n\u6211\u4eec\u7684\u8bf7\u6c42\u6570\u636e\u53ef\u4ee5\u7528 `DataListCls` \u8868\u793a\uff0c\u90a3\u4e48\u8be5\u7c7b\u6570\u636e\u4f20\u9012\u5230python\u51fd\u6570\u5982\u4f55\u88ab\u6267\u884c\uff1f\\n\\n\u6839\u636epybind11\u624b\u518c\uff0c \u6211\u4eec\u9700\u8981\u4e3a\u4e0a\u8ff02\u4e2a\u7c7b\u7f16\u5199binding\u4ee3\u7801\uff0c\u5982\u4e0b:\\n\\n```c++\\nPYBIND11_EMBEDDED_MODULE(aiges_embed, module\\n) {\\n    py::class_<DataListNode> dataListNode(module, \\"DataListNode\\");\\n    dataListNode.\\n\\n                    def(py::init<>())\\n\\n            .def_readwrite(\\"key\\", &DataListNode::key, py::return_value_policy::automatic_reference)\\n            .def_readwrite(\\"data\\", &DataListNode::data, py::return_value_policy::automatic_reference)\\n            .def_readwrite(\\"len\\", &DataListNode::len, py::return_value_policy::automatic_reference)\\n            .def_readwrite(\\"type\\", &DataListNode::type, py::return_value_policy::automatic_reference)\\n            .def(\\"get_data\\", &DataListNode::get_data, py::return_value_policy::reference);\\n\\n    py::class_<DataListCls> dataListCls(module, \\"DataListCls\\");\\n    dataListCls.\\n\\n                    def(py::init<>())\\n\\n            .def_readwrite(\\"list\\", &DataListCls::list, py::return_value_policy::automatic_reference)\\n            .def(\\"get\\", &DataListCls::get, py::return_value_policy::reference);\\n}\\n```\\n\\n`PYBIND11_EMBEDDED_MODULE`(aiges_embed, module) \u5b8f\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e2a python\u7684 aiges_embed\u6a21\u5757\uff0c\u5176\u5185\u5bb9\u4e3a\u4e24\u4e2a\u7c7b\u7684\u5404\u4e2a\u6210\u5458\u505a\u4e86\u4e00\u4e2a\u4e0epython\u5bf9\u5e94\u7c7b\u7684\u7ed1\u5b9a\u52a8\u4f5c\uff1a\\n\\n\u5176\u4e2d\u4f7f\u7528 `def_readwrite`\u7ed1\u5b9a\u53ef\u8bfb\u5199\u5c5e\u6027\uff0c\u4f7f\u5176\u4e0e\u5bf9\u5e94C\u7c7b\u4e2d\u6210\u5458\u53d8\u91cf\u3002\\n\\n\u5176\u4e2d\u4f7f\u7528 `def`\u7ed1\u5b9a\u7c7b\u65b9\u6cd5\uff0c\u4f7f\u5176\u4e0e\u5bf9\u5e94C\u7c7b\u4e2d\u65b9\u6cd5(\u6709\u70b9\u7c7b\u4f3c\u4e8e\u7528c\u5b9e\u73b0\u4e00\u5957\u65b9\u6cd5\u4f9b\u7528\u6237\u5728python\u4e2d\u8c03\u7528)\uff0c\u4e0a\u8ff0 wrapperOnceExec\u65b9\u6cd5\u5728c++\u4fa7\u8c03\u7528\u540e\uff0c \u6267\u884c\u5230 python\u4ee3\u7801\u65f6\uff0c \u5982\u679c\u6267\u884c reqData.get\u65b9\u6cd5\uff0c\u5373\u4f1a\u8c03\u7528c++\u5b9e\u73b0\u7684get\u65b9\u6cd5\u3002\\n\\n\u56e0\u4e3aC++\u548cpython\u6709\u4e0d\u540c\u7684\u5185\u5b58\u7ba1\u7406\u673a\u5236\uff0c \u5728\u4e3a\u8fd4\u56de\u975e\u666e\u901a\u7c7b\u578b\u7684\u51fd\u6570\u521b\u5efa\u7ed1\u5b9a\u65f6\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u95ee\u9898\u3002\u4ec5\u901a\u8fc7\u67e5\u770b\u7c7b\u578b\u4fe1\u606f\uff0c Python\u4fa7\u4e0d\u77e5\u9053\u662f\u5426\u5e94\u8be5\u8d1f\u8d23\u8fd4\u56de\u503c\u5e76\u6700\u7ec8\u91ca\u653e\u5176\u8d44\u6e90\uff0c\u6216\u8005\u662f\u5426\u5e94\u8be5\u5728 C++ \u7aef\u5904\u7406\u5185\u5b58\u7684\u91ca\u653e\u3002\u4e3a\u6b64\uff0cpybind11 \u63d0\u4f9b\u4e86\u51e0\u4e2a\u8fd4\u56de\u503c\u7b56\u7565 \u6ce8\u89e3\uff0c\u53ef\u4ee5\u4f20\u9012\u7ed9module_::def()and class_::def()\u51fd\u6570\u3002\u9ed8\u8ba4\u7b56\u7565\u662f \\n`return_value_policy::automatic`\u3002\\n\\n\u8fd9\u5757\u5728\u7ed1\u5b9afunction\u65f6\u9700\u8981\u7279\u522b\u6ce8\u610f\uff0c \u4e0d\u5408\u9002\u7684\u8fd4\u56de\u503c\u7b56\u7565\u53ef\u80fd\u4f1a\u5f15\u53d1\u672a\u77e5\u9519\u8bef\uff0c\u56e0\u6b64\u6b64\u90e8\u5206\u975e\u5e38\u6781\u5176\u91cd\u8981\u3002\\n\\n\u5173\u4e8e\u8fd4\u56de\u503c\u7b56\u7565\uff0c\u8bf7\u53c2\u8003[\u6587\u6863](https://pybind11.readthedocs.io/en/stable/advanced/functions.html)\\n\\n\\n\u6709\u4e86\u4ee5\u4e0a\u7684binding\u4e4b\u540e\uff0c \u5728\u5bf9\u5e94\u7684python\u89e3\u91ca\u5668\u751f\u547d\u5468\u671f\u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528  `import aiges_embed` \u5bfc\u5165\u8be5c\u4fa7\u5b9a\u4e49\u7684Module\u4ee5\u53ca\u5176\u4e2d\u7684class\u7c7b\u3002\\n\\n[wrapper.py](https://github.com/xfyun/aiges_c_python_wrapper/blob/master/wrapper.py)\u5411\u60a8\u5c55\u793a\u4e86\u5bfc\u5165 python\u4fa7\u7684\u5b9e\u73b0\u3002\\n\\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\\n\\naiges_embed \u5e93\u662f\u7528\u5b8f`PYBIND11_EMBEDDED_MODULE`\u5728c\u4fa7\u8fdb\u7a0b\u4e2d\u52a8\u6001\u5b9a\u4e49\uff0c\u56e0\u6b64aiges_embed\u5e93\u65e0\u6cd5\u5728\u672c\u5730\u7684python lib\u76ee\u5f55\u4e2d\u627e\u5230\uff0c\u8fd9\u7ed9\u6211\u4eec\u672c\u5730\u8c03\u8bd5\u5e26\u6765\u4e00\u5b9a\u7684\u56f0\u96be\uff0c\u5373\u7528\u6237\u4e0d\u6e05\u695aaige_embed\u4e2d\u7684DataListNode, DataListCls\u662f\u5982\u4f55\u5b9e\u73b0\uff0c\u4ee5\u53ca\u5b9a\u4e49\u7684\u3002\\n\\n\u56e0\u6b64\uff0c`aiges`\u8fd9\u8fb9\u505a\u6cd5\u662f\u521b\u5efa\u4e00\u4e2apython\u7684 [sdk](https://github.com/xfyun/aiges_python)\uff0c\u4f9b\u7528\u6237\u5728\u4f7f\u7528Pure Python(\u6ca1\u6709c\u7a0b\u5e8f\u8fd0\u884c\u73af\u5883\uff0c\u53ea\u6709python)\u73af\u5883\u8c03\u8bd5`wrapper.py`\u903b\u8f91.\\n\u6211\u4eec\u5728 [sdk.dto](https://github.com/xfyun/aiges_python/blob/master/aiges/dto.py#L51)\u5b9e\u73b0c\u4fa7\u5b9a\u4e49\u7684\u76f8\u540c\u7c7b\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u770b\u5230 wrapper.py\u7684\u524d\u4e24\u884c:\\n\\n```python\\ntry:\\n    from aiges_embed import ResponseData, Response, DataListNode, DataListCls  # c++\\nexcept:\\n    from aiges.dto import Response, ResponseData, DataListNode, DataListCls\\n\\n```\\n\u7b2c\u4e00\u884c\u5bfc\u5165\u6267\u884c\u6210\u529f\u7684\u6761\u4ef6\u662f,\u7531c\u8fdb\u7a0b\u52a0\u8f7d\u8fd0\u884c\u6b64wrapper.py\\n\\n\u7b2c\u4e8c\u884c\u5bfc\u5165\u6267\u884c\u6210\u529f\u7684\u6761\u4ef6\u662f,\u672c\u5730python\u73af\u5883\u6a21\u62df\u8fd0\u884c wrapper.py\u65f6\uff0c\u6b64\u65f6\u4f9d\u8d56\u672c\u5730python\u5e93\u662f\u5426 \u5b89\u88c5\u8fc7aiges\u4f9d\u8d56\\n\\n\u4f7f\u7528 `pip install aiges` \u5373\u53ef\u5b8c\u6210\u5b89\u88c5\u3002\\n\\n\\n***\u6ce8\u610f*** \\n\\n\u80af\u5b9a\u6709\u540c\u5b66\u6bd4\u8f83\u7591\u60d1\u8fd9\u4e2a\u8bbe\u8ba1\u3002 \u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u6ca1\u6709\u53d1\u73b0pybind11\u539f\u751f\u6709\u4f55\u66f4\u4f18\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5982\u6709\u6211\u4e0d\u77e5\u9053\u7684\uff0c\u8fd8\u8bf7\u5404\u4f4d\u89c2\u4f17\u544a\u77e5\u3002\\n\\n\\n* Python\u6267\u884c\u5b8c wrapperOnceExec,C++\u5982\u4f55\u63a5\u53d7python\u8fd4\u56de\uff1f\\n\\n\u4e0a\u8ff0\u63cf\u8ff0\u4e86C++\u4f20\u5165\u6570\u636e\u5230Python\uff0c\u7528\u7684\u662f `DataListCls`\u7c7b\u7684\u7ed1\u5b9a\uff0c \u8fd4\u56de\u5176\u5b9e\u4e5f\u7c7b\u4f3c\uff0c\u4e5f\u662f\u5b9e\u73b0\u7c7b\u4f3c\u7ed1\u5b9a `Response`\\n\u53c2\u89c1:\\n\\n[pywraper.h](https://github.com/xfyun/aiges_c_python_wrapper/blob/master/pyWrapper.h#L40)\\n\\n\\n### aiges sdk\\n\\n\u4e0a\u8ff0\u63d0\u5230\u7684\u5728python\u7684 [aiges sdk](https://github.com/xfyun/aiges_python/blob/master/aiges/sdk.py#L714)\u4e2d\uff0c \u6211\u4eec\u7528python\u5b9e\u73b0\u4e86\u5bf9C\u7a0b\u5e8f\u7684\u4e00\u4e2a\u4eff\u771f\uff0c\u5e76\u4e14\uff0c\u5728sdk\u4e2d\u68c0\u67e5\u7528\u6237\u5bf9 wrapper.py\u7684\u7f16\u5199\u662f\u5426\u6709\u7eb0\u6f0f\u6216\u8005\u9519\u8bef\uff0c\u63d0\u524d\u66b4\u9732wrapper.py\u53ef\u80fd\u7684\u7f16\u5199\u95ee\u9898\u3002\\n\\nwrapper.py\u7684\u7f16\u5199\u8bf7\u79fb\u6b65: [\u5b9e\u73b0\u7b2c\u4e00\u4e2awrapper.py](https://iflytek.github.io/athena_website/docs/%E5%8A%A0%E8%BD%BD%E5%99%A8/Python%E6%8F%92%E4%BB%B6)\\n\\n\\n### \u5173\u4e8epython\u63d2\u4ef6\u6027\u80fd\\n\u4e00\u53e5\u8bdd\uff0c\u5f53\u524d\u72b6\u6001\u672a\u6b63\u5f0f\u6d4b\u8bd5python\u6027\u80fd\uff0c\u5f15\u7528\u524d\u540c\u4e8b\u4e00\u53e5\u8bdd(\u4f60\u90fd\u5f00\u59cb\u7528py\u4e86\u8fd8\u8003\u8651\u6027\u80fd\uff1f\uff1f\uff1f)\u7b49\u4e0b\uff0c\u8fd9\u5e76\u4e0d\u4e25\u8c28\uff0c\u6211\u9053\u6b49\u3002python\u4e5f\u662f\u53ef\u4ee5\u5b9e\u73b0\u6bd4\u8f83\u9ad8\u7684\u6027\u80fd\u7684\uff0c \u4e14\u542c\u6211\u4e00\u6bb5\u4e0d\u8d1f\u8d23\u4efb\u7684\u5634\u9041\u5206\u6790\uff1a\\n\\n1: \u5f53\u524d\u4e3b\u6d41\u7684python\u63a8\u7406\u5b9e\u73b0\uff0c\u6700\u7ec8\u8ba1\u7b97\u90e8\u5206\u8fd8\u662f\u843d\u5728\u4e86python\u4e2d\u7684\u4e00\u4e9b\u4e09\u65b9\u79d1\u5b66\u5e93\u4e2d\uff0c\u5982numpy\uff0ctensorflow\u7b49 c\u5b9e\u73b0\u7684\u7c7b\u5e93\u4e2d\u3002 \u56e0\u6b64\uff0c\u6bd4\u8f83\u8d1f\u8d23\u4efb\u7684\u4e00\u6bb5\u89e3\u91ca\u662f\uff0c\u5982\u679c\u4f60\u7684\u63a8\u7406\u63d2\u4ef6\u4e2d\u7eafpython\u7684\u903b\u8f91\u8d8a\u5c11\uff0c\u90a3\u4e48\u7406\u8bba\u4e0a\u6027\u80fd\u4e0d\u4f1a\u4e0b\u964d\u592a\u591a\u3002\u4e00\u65e6\u6709\u4e00\u4e9b\u590d\u6742\u903b\u8f91\u5728python\u4e2d\u7528\u7eafpy\u5b9e\u73b0\uff0c\u90a3\u4e48\u8be5\u5904\u4e00\u5b9a\u662f\u4e00\u4e2a\u6027\u80fd\u4e0b\u964d\u70b9\u3002\\n\\n2: \u5982\u679cai\u80fd\u529b\u8981\u6c42\u8f93\u5165\u4e00\u4e9b\u5927\u7684\u4e8c\u8fdb\u5236\uff0c\u6bd4\u5982\u56fe\u7247\uff0c\u97f3\u89c6\u9891\uff0c\u4eceC\u7684\u5185\u5b58\u5230 Python\u7684 bytes\u5185\u5b58\u9700\u8981\u6709\u4e00\u6b21\u62f7\u8d1d\uff0c\u53ef\u80fd\u662f\u4e00\u4e2a\u6027\u80fd\u4e0b\u964d\u70b9\\n\\n3: \u591a\u8bf4\u65e0\u76ca\uff0c\u5177\u4f53\u60c5\u51b5\u5177\u4f53\u5206\u6790\\n\\n\\n### \u5173\u4e8epybind11 \u63d0\u4f9b\u7684\u96f6\u62f7\u8d1d\u673a\u5236\\n\\nPython\u63d0\u4f9b\u4e86\u4e00\u5957 [Buffer Protocol](https://docs.python.org/3/c-api/buffer.html)\uff0c\u57fa\u4e8e\u5b83\u53ef\u4ee5\u5b9e\u73b0\u5185\u5b580\u62f7\u8d1d\uff0c\u5728\u4e0d\u540c\u7684C\u63d2\u4ef6\u4e2d\u8fdb\u884c\u8f6c\u79fb\u5904\u7406\u3002\\n\\n\u7b80\u800c\u8a00\u4e4b\u5462\u5b83\u662f\u4e2a\u4ec0\u4e48\u73a9\u610f\u5462\uff1f \u6bd4\u5982\u6709\u4e00\u4e2a\u5927\u6bb5\u7684\u6570\u636e\u5feb(\u97f3\u89c6\u9891)\uff0c\u6bd4\u5982\u5c06\u5b83\u653e\u5728\u4e00\u4e2a array\u6570\u7ec4\u4e2d\uff0c\u73b0\u5728\u6211\u4eec\u9700\u8981\u7528 numpy\u53bb\u52a0\u8f7d\u5b83\uff0c\u5982\u679c\u8fd9\u4e2aarray\u6570\u7ec4\u662f\u539f\u751f\u7684python list\uff0c\u90a3\u4e48\u8fd9\u4e00\u8fc7\u7a0b\u5fc5\u7136\u662f\u6709\u62f7\u8d1d\u8fc7\u7a0b\u7684\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u5728c\u4e2d\u5229\u7528 `buffer protocol` \u8bbe\u8ba1\u51fa\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u4f20\u9012\u5230 numpy\u5904\u7406\u65f6\uff0c\u6570\u636e\u5757\u53ef\u4ee5\u76f4\u63a5\u6307\u9488\u8f6c\u79fb\uff0c\u65e0\u9700\u505a\u6570\u636e\u62f7\u8d1d\uff0c\u5373\u53ef\u5728numpy\u4e2d\u5904\u7406\u8be5\u6570\u636e\u5185\u5b58\u5927\u5757\uff0c \u8fd9\u5728\u8ba1\u7b97\u63a8\u7406\u573a\u666f\u5341\u5206\u6709\u7528\u3002\\n\\n\u5177\u4f530\u62f7\u8d1d\u4ee5\u53ca buffer protocol \u7684demo\u53c2\u8003:\\n\\n- [\u7b80\u6613\u7684 buffer protocol demo](https://jakevdp.github.io/blog/2014/05/05/introduction-to-the-python-buffer-protocol/#:~:text=The%20Python%20buffer%20protocol%2C%20also,manipulate%20large%20arrays%20of%20data.)\\n\\n- [pybind11: buffer protocol](https://pybind11.readthedocs.io/en/stable/advanced/pycpp/numpy.html?highlight=numpy#)\\n\\n\\n### \u603b\u7ed3\\n\\n\u5229\u7528Python pybind11 \u6211\u4eec\u53ef\u4ee5\u7528\u975e\u5e38\u7b80\u6d01\u7684\u4ee3\u7801\u5b9e\u73b0 C\u548cpython\u7684\u4e92\u8c03\u7528\uff0c\u8fd9\u7ed9\u6211\u4eecAI\u5de5\u7a0b\u5316\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u53ef\u80fd\u6027\u3002\\n\\n### \u7279\u522b\u9e23\u8c22\\n\\n\u672c\u6587\u90e8\u5206\u53c2\u8003(chao): \\n\\n- https://zhuanlan.zhihu.com/p/444805518"},{"id":"sealos4-athenaserving","metadata":{"permalink":"/athena_website/blog/sealos4-athenaserving","editUrl":"https://github.com/iflytek/athena_website/tree/master/blog/2022-07-15-sealos4.md","source":"@site/blog/2022-07-15-sealos4.md","title":"\u5feb\u901f\u90e8\u7f72AthenaServing\u6846\u67b6 (Sealos 4.x)","description":"\u51c6\u5907\u4e00\u53f0\u6d4b\u8bd5\u673a(4c8G),\u786c\u76d8>=20G\u5373\u53ef","date":"2022-07-15T00:00:00.000Z","formattedDate":"2022\u5e747\u670815\u65e5","tags":[{"label":"sealos","permalink":"/athena_website/blog/tags/sealos"},{"label":"ai","permalink":"/athena_website/blog/tags/ai"},{"label":"sealos4","permalink":"/athena_website/blog/tags/sealos-4"},{"label":"athenaserving","permalink":"/athena_website/blog/tags/athenaserving"}],"readingTime":5.265,"hasTruncateMarker":false,"authors":[{"name":"ybyang7","title":"Opensource AI Engineer","url":"https://github.com/berlinsaint","imageURL":"https://avatars.githubusercontent.com/u/10629930?v=4","key":"ybyang7"}],"frontMatter":{"slug":"sealos4-athenaserving","title":"\u5feb\u901f\u90e8\u7f72AthenaServing\u6846\u67b6 (Sealos 4.x)","authors":["ybyang7"],"tags":["sealos","ai","sealos4","athenaserving"]},"prevItem":{"title":"Pybind11\u52a0\u901fAI\u6781\u901f\u843d\u5730","permalink":"/athena_website/blog/Pybind11\u52a0\u901fAI\u6781\u901f\u843d\u5730"},"nextItem":{"title":"\u5feb\u901f\u521b\u5efak8s\u96c6\u7fa4(sealos3 on aws)","permalink":"/athena_website/blog/aws-sealos-3"}},"content":"\u51c6\u5907\u4e00\u53f0\u6d4b\u8bd5\u673a(4c8G),\u786c\u76d8>=20G\u5373\u53ef\\n\\n\\n## \u5b89\u88c5\\n\\n1. \u5b89\u88c5sealos.4.0\\n\\n``` wget -c https://sealyun-home.oss-cn-beijing.aliyuncs.com/sealos-4.0/latest/sealos-amd64 -O sealos &&  chmod +x sealos && mv sealos /usr/bin```\\n\\n  \\n\\n2. \u521b\u5efa\u96c6\u7fa4\\n\\n* ```sealos run labring/kubernetes:v1.19.16 labring/calico:v3.22.1   --masters 192.168.64.2 -p <password>```\\n\\n![img](imgs/sealos4-run-k8s.png)\\n![img2](imgs/sealos4-run-k8s-2.png)\\n![img2](imgs/sealos4-run-k8s-3.png)\\n\\n* ```sealos run labring/helm:v3.8.2 # install helm```\\n* ```sealos run labring/openebs:v1.9.0 # install openebs```\\n* ```sealos run registry.cn-qingdao.aliyuncs.com/labring/athenaserving:v2.0.0rc1```\\n\\n\\n3. \u8c03\u7528AI demo\u80fd\u529b MMOCR\u80fd\u529b\\n\\n```bash\\ncd /var/lib/sealos/data/default/rootfs/athenaserving/charts/mmocr_ase\\n# \u4fee\u6539 demo.py\u4e2d\u7684 url\u90e8\u5206\u4e3a nodeIP\\npython3 demo.py\\n```\\n\\n\u8c03\u7528\u7ed3\u679c:\\n\\n```bash\\n200\\nHTTP API response is : [{\'filename\': \'0\', \'result\': [{\'box\': [190, 37, 253, 31, 254, 46, 191, 52], \'box_score\': 0.9566415548324585, \'text\': \'nboroughofs\', \'text_score\': 1.0}, {\'box\': [253, 47, 257, 36, 287, 47, 282, 58], \'box_score\': 0.9649642705917358, \'text\': \'fsouthw\', \'text_score\': 1.0}, {\'box\': [157, 59, 188, 41, 194, 52, 163, 70], \'box_score\': 0.9521175622940063, \'text\': \'londond\', \'text_score\': 0.9897959183673469}, {\'box\': [280, 58, 286, 50, 306, 67, 300, 74], \'box_score\': 0.9397556781768799, \'text\': \'thwark\', \'text_score\': 1.0}, {\'box\': [252, 78, 295, 78, 295, 98, 252, 98], \'box_score\': 0.9694718718528748, \'text\': \'hill\', \'text_score\': 1.0}, {\'box\': [165, 78, 247, 78, 247, 99, 165, 99], \'box_score\': 0.9548642039299011, \'text\': \'octavia\', \'text_score\': 1.0}, {\'box\': [164, 105, 215, 103, 216, 121, 165, 123], \'box_score\': 0.9806956052780151, \'text\': \'social\', \'text_score\': 1.0}, {\'box\': [219, 104, 294, 104, 294, 122, 219, 122], \'box_score\': 0.9688025116920471, \'text\': \'reformer\', \'text_score\': 1.0}, {\'box\': [150, 124, 226, 124, 226, 141, 150, 141], \'box_score\': 0.9752051830291748, \'text\': \'established\', \'text_score\': 1.0}, {\'box\': [229, 124, 255, 124, 255, 140, 229, 140], \'box_score\': 0.94972825050354, \'text\': \'this\', \'text_score\': 1.0}, {\'box\': [259, 125, 305, 123, 306, 139, 260, 142], \'box_score\': 0.9752089977264404, \'text\': \'garden\', \'text_score\': 1.1666666666666667}, {\'box\': [166, 142, 193, 141, 194, 156, 167, 157], \'box_score\': 0.9731062650680542, \'text\': \'hall\', \'text_score\': 1.0}, {\'box\': [198, 142, 223, 142, 223, 156, 198, 156], \'box_score\': 0.9548938870429993, \'text\': \'and\', \'text_score\': 1.0}, {\'box\': [228, 144, 286, 144, 286, 159, 228, 159], \'box_score\': 0.977089524269104, \'text\': \'cottages\', \'text_score\': 1.25}, {\'box\': [180, 158, 205, 158, 205, 172, 180, 172], \'box_score\': 0.9400062561035156, \'text\': \'and\', \'text_score\': 1.0}, {\'box\': [210, 160, 279, 158, 279, 172, 210, 174], \'box_score\': 0.9543584585189819, \'text\': \'pioneered\', \'text_score\': 1.0}, {\'box\': [226, 176, 277, 176, 277, 188, 226, 188], \'box_score\': 0.9748533964157104, \'text\': \'cadets\', \'text_score\': 1.0}, {\'box\': [183, 177, 223, 177, 223, 189, 183, 189], \'box_score\': 0.9633153676986694, \'text\': \'army\', \'text_score\': 1.0}, {\'box\': [201, 190, 235, 190, 235, 204, 201, 204], \'box_score\': 0.9714152216911316, \'text\': \'1887\', \'text_score\': 1.25}, {\'box\': [175, 213, 180, 201, 211, 212, 206, 225], \'box_score\': 0.9704344868659973, \'text\': \'vted\', \'text_score\': 0.9191176470588236}, {\'box\': [241, 213, 278, 200, 283, 213, 246, 227], \'box_score\': 0.9607459902763367, \'text\': \'epeople\', \'text_score\': 1.0}, {\'box\': [208, 224, 210, 212, 223, 214, 220, 227], \'box_score\': 0.9337806701660156, \'text\': \'by\', \'text_score\': 1.0}, {\'box\': [223, 214, 240, 214, 240, 226, 223, 226], \'box_score\': 0.969144344329834, \'text\': \'the\', \'text_score\': 1.0}]}]\\n########################################\\nMMocr Result: box located at [190, 37, 253, 31, 254, 46, 191, 52], box score is 0.9566415548324585.  Detected text is nboroughofs , text  score is 1.0...\\nMMocr Result: box located at [253, 47, 257, 36, 287, 47, 282, 58], box score is 0.9649642705917358.  Detected text is fsouthw , text  score is 1.0...\\nMMocr Result: box located at [157, 59, 188, 41, 194, 52, 163, 70], box score is 0.9521175622940063.  Detected text is londond , text  score is 0.9897959183673469...\\nMMocr Result: box located at [280, 58, 286, 50, 306, 67, 300, 74], box score is 0.9397556781768799.  Detected text is thwark , text  score is 1.0...\\nMMocr Result: box located at [252, 78, 295, 78, 295, 98, 252, 98], box score is 0.9694718718528748.  Detected text is hill , text  score is 1.0...\\nMMocr Result: box located at [165, 78, 247, 78, 247, 99, 165, 99], box score is 0.9548642039299011.  Detected text is octavia , text  score is 1.0...\\nMMocr Result: box located at [164, 105, 215, 103, 216, 121, 165, 123], box score is 0.9806956052780151.  Detected text is social , text  score is 1.0...\\nMMocr Result: box located at [219, 104, 294, 104, 294, 122, 219, 122], box score is 0.9688025116920471.  Detected text is reformer , text  score is 1.0...\\nMMocr Result: box located at [150, 124, 226, 124, 226, 141, 150, 141], box score is 0.9752051830291748.  Detected text is established , text  score is 1.0...\\nMMocr Result: box located at [229, 124, 255, 124, 255, 140, 229, 140], box score is 0.94972825050354.  Detected text is this , text  score is 1.0...\\nMMocr Result: box located at [259, 125, 305, 123, 306, 139, 260, 142], box score is 0.9752089977264404.  Detected text is garden , text  score is 1.1666666666666667...\\nMMocr Result: box located at [166, 142, 193, 141, 194, 156, 167, 157], box score is 0.9731062650680542.  Detected text is hall , text  score is 1.0...\\nMMocr Result: box located at [198, 142, 223, 142, 223, 156, 198, 156], box score is 0.9548938870429993.  Detected text is and , text  score is 1.0...\\nMMocr Result: box located at [228, 144, 286, 144, 286, 159, 228, 159], box score is 0.977089524269104.  Detected text is cottages , text  score is 1.25...\\nMMocr Result: box located at [180, 158, 205, 158, 205, 172, 180, 172], box score is 0.9400062561035156.  Detected text is and , text  score is 1.0...\\nMMocr Result: box located at [210, 160, 279, 158, 279, 172, 210, 174], box score is 0.9543584585189819.  Detected text is pioneered , text  score is 1.0...\\nMMocr Result: box located at [226, 176, 277, 176, 277, 188, 226, 188], box score is 0.9748533964157104.  Detected text is cadets , text  score is 1.0...\\nMMocr Result: box located at [183, 177, 223, 177, 223, 189, 183, 189], box score is 0.9633153676986694.  Detected text is army , text  score is 1.0...\\nMMocr Result: box located at [201, 190, 235, 190, 235, 204, 201, 204], box score is 0.9714152216911316.  Detected text is 1887 , text  score is 1.25...\\nMMocr Result: box located at [175, 213, 180, 201, 211, 212, 206, 225], box score is 0.9704344868659973.  Detected text is vted , text  score is 0.9191176470588236...\\nMMocr Result: box located at [241, 213, 278, 200, 283, 213, 246, 227], box score is 0.9607459902763367.  Detected text is epeople , text  score is 1.0...\\nMMocr Result: box located at [208, 224, 210, 212, 223, 214, 220, 227], box score is 0.9337806701660156.  Detected text is by , text  score is 1.0...\\nMMocr Result: box located at [223, 214, 240, 214, 240, 226, 223, 226], box score is 0.969144344329834.  Detected text is the , text  score is 1.0...\\n```"},{"id":"aws-sealos-3","metadata":{"permalink":"/athena_website/blog/aws-sealos-3","editUrl":"https://github.com/iflytek/athena_website/tree/master/blog/2022-07-14-sealos-aws.md","source":"@site/blog/2022-07-14-sealos-aws.md","title":"\u5feb\u901f\u521b\u5efak8s\u96c6\u7fa4(sealos3 on aws)","description":"1. \u5728aws\u4e0a\u7533\u8bf7\u670d\u52a1\u5668\u8d44\u6e90","date":"2022-07-14T00:00:00.000Z","formattedDate":"2022\u5e747\u670814\u65e5","tags":[{"label":"sealos","permalink":"/athena_website/blog/tags/sealos"},{"label":"aws","permalink":"/athena_website/blog/tags/aws"}],"readingTime":1.55,"hasTruncateMarker":false,"authors":[{"name":"sea-wyq","title":"Opensource AI Engineer","url":"https://github.com/sea-wyq","imageURL":"https://avatars.githubusercontent.com/u/22475606?v=4","key":"sea-wyq"}],"frontMatter":{"slug":"aws-sealos-3","title":"\u5feb\u901f\u521b\u5efak8s\u96c6\u7fa4(sealos3 on aws)","authors":"sea-wyq","tags":["sealos","aws"]},"prevItem":{"title":"\u5feb\u901f\u90e8\u7f72AthenaServing\u6846\u67b6 (Sealos 4.x)","permalink":"/athena_website/blog/sealos4-athenaserving"},"nextItem":{"title":"Welcome","permalink":"/athena_website/blog/welcome"}},"content":"## 1. \u5728aws\u4e0a\u7533\u8bf7\u670d\u52a1\u5668\u8d44\u6e90\\n\\n![img](aws.png)\\n\\n## 2. \u4f7f\u7528sealos\u90e8\u7f72k8s\u96c6\u7fa4\\n\\n#### 2.1. \u5173\u95ed\u9632\u706b\u5899\u548cselinux :All\\n\\n```\\nsystemctl stop firewalld \\nsystemctl disable firewalld \\nsetenforce 0\\n```\\n\\n#### 2.2 \u521b\u5efa\u865a\u62df\u673a\u4e4b\u540e\uff0c\u914d\u7f6e\u4e3b\u673a\u540d\uff0c\u914d\u7f6e\u5185\u7f51\u89e3\u6790:All\\n\\n```\\nhostnamectl set-hostname master \\nhostnamectl set-hostname node1\\n```\\n\\n#### 2.3.\u914d\u7f6ehosts\u6587\u4ef6:Master\\n\\n```\\n# \u8282\u70b9ip\u901a\u8fc7\u5404\u8282\u70b9ipconfig\u83b7\u53d6\\ncat <<EOF >> /etc/hosts  \\n172.31.1.36 master  \\n172.31.11.161 node1   \\nEOF\\n```\\n\\n#### 2.4.\u914d\u7f6emaster\u514d\u5bc6\u767b\u5f55\u5404\u8282\u70b9\uff1aMaster\\n\\n```\\nssh-keygen\\nssh-copy-id root@master \\nssh-copy-id root@node1 \\n```\\n\\n#### 2.5. \u4e0b\u8f7d\u5e76\u5b89\u88c5sealos-3.9\u5e76\u90e8\u7f72\u4e00\u4e2a\u4e00\u4e3b\u4e00\u4ece\u7684k8s\u96c6\u7fa4\\n\\n```\\n# \u4e0b\u8f7dsealos\\nwget -c https://sealyun-home.oss-cn-beijing.aliyuncs.com/sealos/latest/sealos && \\n    chmod +x sealos && mv sealos /usr/bin\\n\\n# \u4e0b\u8f7dkubelete-1.22\u7248\u672c\u79bb\u7ebf\u8d44\u6e90\u5305\\nwget -c https://sealyun.oss-cn-beijing.aliyuncs.com/05a3db657821277f5f3b92d834bbaf98-v1.22.0/kube1.22.0.tar.gz\\n\\n# \u90e8\u7f72k8s\u96c6\u7fa4\\nsealos init \\\\\\n--passwd 123456 \\\\\\n--master 172.31.1.36 \\\\\\n--node 172.31.11.161 \\\\\\n--pkg-url /home/ubuntu/kube1.22.0.tar.gz \\\\\\n--version v1.22.0\\n```\\n\\n#### 2.6. \u5b89\u88ddhelm\\n- Download your desired version (wget  https://get.helm.sh/helm-v3.9.0-linux-amd64.tar.gz)\\n- Unpack it (tar -zxvf helm-v3.9.0-linux-amd64.tar.gz)\\n- Find the helm binary in the unpacked directory, and move it to its desireddestination (mv linux-amd64/helm /usr/local/bin/helm)\\n\\n#### 2.7 helm\u5b89\u88c5\u672c\u5730\u6301\u4e45\u5316\u5b58\u50a8openebs\u670d\u52a1\\n\\n```\\nhelm add repo openebs https://openebs.github.io/charts\\nhelm pull openebs/openebs\\n\\n# \u4fee\u6539\u670d\u52a1\u5bf9\u5e94\u7684storageclass\u5373\u53ef\\n#\u9ed8\u8ba4\u6301\u4e45\u5316\u6570\u636e\u5730\u5740\uff1a/var/openebs/local\\n\\n# \u5b89\u88c5openebs\\nhelm install ebs openebs\\n```\\n\\n#### 2.8. \u901a\u8fc7helm\u5b89\u88c5athena\u670d\u52a1\\n\\n```\\nhttps://github.com/sea-wyq/Athena_deploy.git\\ncd Athena_deploy/chart/\\nhelm install athena athenaserving\\n```\\n\\n\u670d\u52a1\u96c6\u7fa4\u642d\u5efa\u6210\u529f\u3002\u3002\u3002"},{"id":"welcome","metadata":{"permalink":"/athena_website/blog/welcome","editUrl":"https://github.com/iflytek/athena_website/tree/master/blog/2021-08-26-welcome/index.md","source":"@site/blog/2021-08-26-welcome/index.md","title":"Welcome","description":"Welcome to contribute AthenaServing Docs and Blogs.","date":"2021-08-26T00:00:00.000Z","formattedDate":"2021\u5e748\u670826\u65e5","tags":[{"label":"opensource","permalink":"/athena_website/blog/tags/opensource"},{"label":"athenaserving","permalink":"/athena_website/blog/tags/athenaserving"}],"readingTime":0.035,"hasTruncateMarker":false,"authors":[{"name":"ybyang7","title":"Opensource AI Engineer","url":"https://github.com/berlinsaint","imageURL":"https://avatars.githubusercontent.com/u/10629930?v=4","key":"ybyang7"},{"name":"sea-wyq","title":"Opensource AI Engineer","url":"https://github.com/sea-wyq","imageURL":"https://avatars.githubusercontent.com/u/22475606?v=4","key":"sea-wyq"},{"name":"jhr","title":"Junior Engineer","url":"https://github.com/robbinlol","imageURL":"https://avatars.githubusercontent.com/u/10591513?v=4","key":"jhr"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["ybyang7","sea-wyq","jhr"],"tags":["opensource","athenaserving"]},"prevItem":{"title":"\u5feb\u901f\u521b\u5efak8s\u96c6\u7fa4(sealos3 on aws)","permalink":"/athena_website/blog/aws-sealos-3"},"nextItem":{"title":"First Blog Post","permalink":"/athena_website/blog/first-blog-post"}},"content":"Welcome to contribute AthenaServing Docs and Blogs."},{"id":"first-blog-post","metadata":{"permalink":"/athena_website/blog/first-blog-post","editUrl":"https://github.com/iflytek/athena_website/tree/master/blog/2019-05-28-first-blog-post.md","source":"@site/blog/2019-05-28-first-blog-post.md","title":"First Blog Post","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet \u3002","date":"2019-05-28T00:00:00.000Z","formattedDate":"2019\u5e745\u670828\u65e5","tags":[{"label":"hola","permalink":"/athena_website/blog/tags/hola"},{"label":"docusaurus","permalink":"/athena_website/blog/tags/docusaurus"}],"readingTime":0.125,"hasTruncateMarker":false,"authors":[{"name":"Gao Wei","title":"Docusaurus Core Team","url":"https://github.com/wgao19","image_url":"https://github.com/wgao19.png","imageURL":"https://github.com/wgao19.png"}],"frontMatter":{"slug":"first-blog-post","title":"First Blog Post","authors":{"name":"Gao Wei","title":"Docusaurus Core Team","url":"https://github.com/wgao19","image_url":"https://github.com/wgao19.png","imageURL":"https://github.com/wgao19.png"},"tags":["hola","docusaurus"]},"prevItem":{"title":"Welcome","permalink":"/athena_website/blog/welcome"}},"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet \u3002"}]}')}}]);